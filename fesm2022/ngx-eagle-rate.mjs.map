{"version":3,"file":"ngx-eagle-rate.mjs","sources":["../../../ngx-eagle/rate/rate.component.ts","../../../ngx-eagle/rate/rate.module.ts","../../../ngx-eagle/rate/ngx-eagle-rate.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  booleanAttribute,\r\n  forwardRef,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ngx-rate',\r\n  template: `\r\n    <canvas\r\n      #rateCanvas\r\n      width=\"140\"\r\n      height=\"40\"\r\n      (click)=\"onCanvasClick($event)\"\r\n    ></canvas>\r\n  `,\r\n  host: {\r\n    class: 'ngx-rate',\r\n  },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => RateComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n})\r\nexport class RateComponent implements OnInit, ControlValueAccessor {\r\n  @Input() ngxColor: string = '#FFA600';\r\n  @Input({ transform: booleanAttribute }) ngxAllowClear: boolean = true;\r\n  @ViewChild('rateCanvas', { static: true })\r\n  canvas!: ElementRef<HTMLCanvasElement>;\r\n  context: CanvasRenderingContext2D | null = null;\r\n  disabled: boolean = false;\r\n  selectedStar: number = -1;\r\n  stars: boolean[] = [false, false, false, false, false]; // Estado de las estrellas (true = seleccionada, false = no seleccionada)\r\n\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef) {\r\n    this.disabled = elementRef.nativeElement.hasAttribute('disabled');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.context = this.canvas.nativeElement.getContext('2d');\r\n    this.fillStar(this.selectedStar);\r\n    this.canvas.nativeElement.addEventListener('mousemove', (event) => {\r\n      if (!this.disabled) {\r\n        this.onMouseMove(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    if (value) {\r\n      this.selectedStar = value - 1;\r\n      this.onChange(value);\r\n      this.fillStar(this.selectedStar);\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent) {\r\n    const rect = this.canvas.nativeElement.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const y = event.clientY - rect.top;\r\n    this.fillStar(this.findStarIndex(x, y));\r\n  }\r\n\r\n  findStarIndex(x: number, y: number) {\r\n    const rect = this.canvas.nativeElement.getBoundingClientRect();\r\n    let index = this.selectedStar;\r\n    if (y >= 10 && y <= 27 && x <= rect.width && y <= rect.height) {\r\n      if (x >= 10 && x <= 28) {\r\n        index = 0;\r\n      } else if (x >= 35 && x <= 54) {\r\n        index = 1;\r\n      } else if (x >= 60 && x <= 77) {\r\n        index = 2;\r\n      } else if (x >= 85 && x <= 103) {\r\n        index = 3;\r\n      } else if (x >= 110 && x <= 127) {\r\n        index = 4;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  onCanvasClick(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      const rect = this.canvas.nativeElement.getBoundingClientRect();\r\n      const x = event.clientX - rect.left;\r\n      const y = event.clientY - rect.top;\r\n      const index = this.findStarIndex(x, y);\r\n      this.selectedStar = index !== this.selectedStar || !this.ngxAllowClear ? index : -1;\r\n      this.writeValue(\r\n        this.selectedStar !== -1 ? this.selectedStar + 1 : this.selectedStar\r\n      );\r\n      this.fillStar(this.selectedStar);\r\n    }\r\n  }\r\n\r\n  drawStars() {\r\n    const starRadius = 10; // Radio de las estrellas\r\n    const spacing = 25; // Espaciado entre estrellas\r\n    const startY = 20; // Posición Y de las estrellas\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      const startX = 20 + spacing * i; // Posición X de cada estrella\r\n      this.drawStar(\r\n        startX,\r\n        startY,\r\n        5,\r\n        starRadius,\r\n        starRadius / 2,\r\n        this.stars[i]\r\n      ); // Dibujar una estrella\r\n    }\r\n  }\r\n\r\n  drawStar(\r\n    cx: number,\r\n    cy: number,\r\n    spikes: number,\r\n    outerRadius: number,\r\n    innerRadius: number,\r\n    filled: boolean\r\n  ) {\r\n    let rot = (Math.PI / 2) * 3;\r\n    let x = cx;\r\n    let y = cy;\r\n    let step = Math.PI / spikes;\r\n    if (this.context) {\r\n      this.context.beginPath();\r\n      this.context.moveTo(cx, cy - outerRadius);\r\n      for (let i = 0; i < spikes; i++) {\r\n        x = cx + Math.cos(rot) * outerRadius;\r\n        y = cy + Math.sin(rot) * outerRadius;\r\n        this.context.lineTo(x, y);\r\n        rot += step;\r\n        x = cx + Math.cos(rot) * innerRadius;\r\n        y = cy + Math.sin(rot) * innerRadius;\r\n        this.context.lineTo(x, y);\r\n        rot += step;\r\n      }\r\n      this.context.lineTo(cx, cy - outerRadius);\r\n      this.context.closePath();\r\n      if (filled) {\r\n        this.context.fillStyle = this.ngxColor; // Color de la estrella seleccionada\r\n        this.context.strokeStyle = this.ngxColor;\r\n      } else {\r\n        this.context.fillStyle = 'transparent';\r\n        this.context.strokeStyle = this.ngxColor;\r\n      }\r\n      this.context.stroke();\r\n      this.context.fill();\r\n    }\r\n  }\r\n\r\n  // Método para cambiar el estado de la calificación al hacer clic en una estrella\r\n  fillStar(index: number) {\r\n    const canvasEl: HTMLCanvasElement = this.canvas.nativeElement;\r\n    this.context?.clearRect(0, 0, canvasEl.width, canvasEl.height);\r\n    this.stars = this.stars.map((star, i) => i <= index);\r\n    this.drawStars();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RateComponent } from './rate.component';\r\n\r\n@NgModule({\r\n  exports: [RateComponent],\r\n  imports: [RateComponent],\r\n})\r\nexport class RateModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}