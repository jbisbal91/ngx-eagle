{"version":3,"file":"ngx-eagle-expansion-panel.mjs","sources":["../../../projects/ngx-eagle/expansion-panel/expansion-panel/expansion-panel.component.ts","../../../projects/ngx-eagle/expansion-panel/accordion/accordion.component.ts","../../../projects/ngx-eagle/expansion-panel/expansion-panel.module.ts","../../../projects/ngx-eagle/expansion-panel/ngx-eagle-expansion-panel.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ExpansionPanel } from '../expansion-panel.interface';\r\nimport { NgClass, NgIf, NgStyle } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ngx-expansion-panel',\r\n  template: `\r\n    <div\r\n      class=\"card-epanel mb-4 p-4\"\r\n      [class.card-bg]=\"ngxType === 'card'\"\r\n      [ngClass]=\"{ 'rounded-lg box-shadow': ngxType === 'card' }\"\r\n    >\r\n      <div (click)=\"expand()\" class=\"card-header\">\r\n        <span>{{ label }}</span>\r\n        <span class=\"arrow flex\" [ngClass]=\"expanded ? 'rotate' : 'no-rotate'\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"24\"\r\n            viewBox=\"0 -960 960 960\"\r\n            width=\"24\"\r\n          >\r\n            <path d=\"M480-344 240-584l56-56 184 184 184-184 56 56-240 240Z\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <ng-content *ngIf=\"expanded\"></ng-content>\r\n      <div class=\"divider mt-4\" *ngIf=\"ngxType === 'normal'\"></div>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  host: {\r\n    class: 'ngx-expansion-panel',\r\n  },\r\n  imports: [NgClass,NgIf],\r\n})\r\nexport class ExpansionPanelComponent implements ExpansionPanel, OnInit {\r\n  @Output() onClick: EventEmitter<ExpansionPanelComponent> =\r\n    new EventEmitter<ExpansionPanelComponent>();\r\n\r\n  public id: string = '';\r\n  @Input() disabled: boolean = false;\r\n  public expanded: boolean = false;\r\n  @Input() label: string = '';\r\n  @Input() ngxType: 'card' | 'normal' = 'normal';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.guid();\r\n  }\r\n\r\n  expand() {\r\n    const expansionPanel = new ExpansionPanelComponent();\r\n    expansionPanel.expanded = this.expanded;\r\n    expansionPanel.label = this.label;\r\n    expansionPanel.disabled = this.disabled;\r\n    expansionPanel.id = this.id;\r\n    this.onClick.emit(expansionPanel);\r\n  }\r\n\r\n  guid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        const r = (Math.random() * 16) | 0,\r\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  OnDestroy,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { ExpansionPanelComponent } from '../expansion-panel/expansion-panel.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-accordion',\r\n  template: `<ng-content></ng-content>`,\r\n  standalone:true\r\n})\r\nexport class AccordionComponent implements OnDestroy {\r\n  @ContentChildren(ExpansionPanelComponent)\r\n  public expansionPanels!: QueryList<ExpansionPanelComponent>;\r\n\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.expansionPanels.forEach((ep) => {\r\n      this.subscription.add(\r\n        ep.onClick.subscribe((value) => {\r\n          this.expand(value);\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  expand(component: any) {\r\n    this.expansionPanels.forEach((ep) => {\r\n      if (ep.id === component.id) {\r\n        ep.expanded = ep.expanded ? false : true;\r\n      } else {\r\n        ep.expanded = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ExpansionPanelComponent } from './expansion-panel/expansion-panel.component';\r\nimport { AccordionComponent } from './accordion/accordion.component';\r\n\r\n@NgModule({\r\n  exports: [AccordionComponent, ExpansionPanelComponent],\r\n  imports: [AccordionComponent, ExpansionPanelComponent],\r\n})\r\nexport class ExpansionPanelModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}