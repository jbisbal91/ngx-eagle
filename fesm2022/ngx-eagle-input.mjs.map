{"version":3,"file":"ngx-eagle-input.mjs","sources":["../../../projects/ngx-eagle/input/input.component.ts","../../../projects/ngx-eagle/input/input.module.ts","../../../projects/ngx-eagle/input/ngx-eagle-input.ts"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  Optional,\r\n  Self,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgxFillMode, NgxRounded, NgxSize } from './typings';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\nconst ngxSizeMap = {\r\n  small: '2.5rem',\r\n  medium: '3rem',\r\n  large: '3.5rem',\r\n};\r\n\r\nconst ngxRoundedOutlinedMap = {\r\n  small: '2px',\r\n  medium: '4px',\r\n  large: '6px',\r\n};\r\n\r\nconst ngxRoundedfilledMap = {\r\n  small: '2px 2px 0px 0px',\r\n  medium: '4px 4px 0px 0px',\r\n  large: '6px 6px 0px 0px',\r\n};\r\n\r\n@Component({\r\n  selector: 'ngx-input',\r\n  template: `\r\n    <div\r\n      #input_container\r\n      class=\"ngx-input\"\r\n      [class.ngx-input-filled]=\"ngxFillMode === 'filled'\"\r\n      [class.ngx-input-outlined]=\"ngxFillMode === 'outlined'\"\r\n    >\r\n      <label #input_label class=\"ngx-input-label\">{{ label }}</label>\r\n      <input\r\n        #input\r\n        class=\"ngx-nat-input\"\r\n        [placeholder]=\"placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        (input)=\"onInputChange($event)\"\r\n      />\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n})\r\nexport class InputComponent\r\n  implements AfterViewInit, ControlValueAccessor, OnChanges\r\n{\r\n  @Input() ngxSize: NgxSize = 'medium';\r\n  @Input() ngxRounded: NgxRounded = 'medium';\r\n  @Input() ngxFillMode: NgxFillMode = 'filled';\r\n  @Input() label: string = '';\r\n  @Input() placeholder: string = '';\r\n\r\n  @ViewChild('input_container') containerRef!: ElementRef;\r\n  @ViewChild('input_label') labelRef!: ElementRef;\r\n  @ViewChild('input') inputRef!: ElementRef;\r\n\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n  value: any;\r\n  valStatus: boolean = true;\r\n  disabled: boolean = false;\r\n  inputFocus = false;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Self() public ngControl: NgControl\r\n  ) {\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initialize();\r\n    //Se lanza el evento cuando se esta haciendo focus en el input\r\n    this.inputRef.nativeElement.addEventListener('focus', () => {\r\n      this.inputFocus = true;\r\n      this.moveLabel();\r\n    });\r\n    //Se lanza el evento cuando se desenfoca del input\r\n    this.inputRef.nativeElement.addEventListener('blur', () => {\r\n      this.inputFocus = false;\r\n      this.moveLabel();\r\n      this.validate();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.initialize();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  initialize() {\r\n    setTimeout(() => {\r\n      this.ngControl.control?.setValue(this.value);\r\n      this.containerRef.nativeElement.style.height = ngxSizeMap[this.ngxSize];\r\n      this.containerRef.nativeElement.style.borderRadius =\r\n        this.ngxFillMode === 'outlined'\r\n          ? ngxRoundedOutlinedMap[this.ngxRounded]\r\n          : ngxRoundedfilledMap[this.ngxRounded];\r\n      this.labelRef.nativeElement.style.position = 'absolute';\r\n      this.placeholder = this.inputRef.nativeElement.placeholder;\r\n      this.moveLabel();\r\n    });\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    this.moveLabel();\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  moveLabel() {\r\n    if (this.labelRef) {\r\n      const containerHeight = this.containerRef.nativeElement.offsetHeight;\r\n      if (this.inputFocus || this.value) {\r\n        const top = this.ngxFillMode === 'outlined' ? '-0.375rem ' : '0px';\r\n        this.labelRef.nativeElement.style.top = top;\r\n        this.labelRef.nativeElement.style.fontSize = '0.75rem';\r\n        this.inputRef.nativeElement.placeholder = this.placeholder;\r\n        this.buildBorderOutlined();\r\n      } else {\r\n        const top = `${(containerHeight * 0.3333) / 16}rem`;\r\n        this.labelRef.nativeElement.style.top = top;\r\n        this.labelRef.nativeElement.style.fontSize = '0.875rem';\r\n        this.inputRef.nativeElement.placeholder = '';\r\n        this.drawLineTopBorder();\r\n      }\r\n    }\r\n  }\r\n\r\n  onInputChange(event: Event): void {\r\n    this.value = (event.target as HTMLInputElement).value;\r\n    this.ngControl.control?.setValue(this.value);\r\n    this.validate();\r\n    this.buildBorderOutlined();\r\n  }\r\n\r\n  buildBorderOutlined() {\r\n    if (this.ngxFillMode === 'outlined') {\r\n      const containerWidth = this.containerRef.nativeElement.offsetWidth;\r\n      const labelWidth = this.labelRef.nativeElement.offsetWidth;\r\n      const percent = ((labelWidth + 10) / containerWidth) * 100;\r\n      let color = this.valStatus // validacion\r\n        ? this.inputFocus // si esta el input con el focus activo coloca el color que le corresponde\r\n          ? 'var(--ngx-comp-form-field-filled-border-color)'\r\n          : 'currentColor'\r\n        : '#F44336';\r\n      const background = `linear-gradient(to right, ${color} 5px, transparent 5px, transparent ${percent}%, ${color} ${percent}%) no-repeat top/100% 1px`;\r\n      const borderColor = `transparent ${color} ${color}`;\r\n      this.containerRef.nativeElement.style.borderColor = borderColor;\r\n      this.containerRef.nativeElement.style.background = background;\r\n    }\r\n  }\r\n\r\n  drawLineTopBorder() {\r\n    const background =\r\n      this.ngxFillMode === 'outlined'\r\n        ? 'linear-gradient(to right, transparent 0%, currentColor 0%) no-repeat top/100% 1px'\r\n        : 'none';\r\n    const borderColor = `transparent currentColor currentColor`;\r\n    this.containerRef.nativeElement.style.borderColor = borderColor;\r\n    this.containerRef.nativeElement.style.background = background;\r\n  }\r\n\r\n  validate() {\r\n    this.valStatus =\r\n      this.ngControl.status?.toLowerCase() === 'valid' ? true : false;\r\n    this.containerRef.nativeElement.style.color = this.valStatus\r\n      ? 'currentColor'\r\n      : '#F44336';\r\n\r\n    this.inputRef.nativeElement.style.color = this.valStatus\r\n      ? 'var(--ngx-comp-form-field-filled-border-color)'\r\n      : '#F44336';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { InputComponent } from './input.component';\r\n\r\n@NgModule({\r\n  exports: [InputComponent],\r\n  imports: [InputComponent],\r\n})\r\nexport class InputModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}