{"version":3,"file":"ngx-eagle-input.mjs","sources":["../../../ngx-eagle/input/ngx-outlined-text-field/ngx-outlined-text-field.component.ts","../../../ngx-eagle/input/ngx-outlined-text-field/ngx-outlined-text-field.component.html","../../../ngx-eagle/input/input.module.ts","../../../ngx-eagle/input/typings.ts","../../../ngx-eagle/input/ngx-eagle-input.ts"],"sourcesContent":["import { NgIf, NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  TemplateRef,\r\n  ViewChild,\r\n  booleanAttribute,\r\n  numberAttribute,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { Guid, StylesService } from 'ngx-eagle/core/services';\r\nimport { ErrorColor } from 'ngx-eagle/core/types';\r\nimport { Subscription, timer } from 'rxjs';\r\nimport { NgxType } from '../typings';\r\n\r\n@Component({\r\n  selector: 'ngx-outlined-text-field',\r\n  templateUrl: './ngx-outlined-text-field.component.html',\r\n  styleUrls: ['./ngx-outlined-text-field.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, NgTemplateOutlet],\r\n})\r\nexport class NgxOutlinedTextFieldComponent\r\n  implements AfterViewInit, ControlValueAccessor, OnDestroy\r\n{\r\n  @Input() autocomplete: string = '';\r\n  @Input({ transform: booleanAttribute }) disabled: boolean = false;\r\n  @Input() label!: string;\r\n  @Input() pattern!: any;\r\n  @Input() placeholder: string = '';\r\n  @Input() prefix!: any | TemplateRef<void>;\r\n  @Input({ transform: booleanAttribute }) required!: boolean;\r\n  @Input({ transform: numberAttribute }) rows: number = 4;\r\n  @Input() suffix!: any | TemplateRef<void>;\r\n  @Input() type: NgxType = 'text';\r\n  @Input() value: any = '';\r\n\r\n  _placeholder: string = '';\r\n  errorText: string = '';\r\n\r\n  public inputPrefixId: string = Guid.create();\r\n\r\n  @ViewChild('input_container') containerRef!: ElementRef;\r\n  @ViewChild('input_label') labelRef!: ElementRef;\r\n  @ViewChild('input') inputRef!: ElementRef;\r\n\r\n  borderColor: string = '#747775';\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n\r\n  isValid: boolean = true;\r\n  isFocused: boolean = false;\r\n  private autofilledSubscription: Subscription = new Subscription();\r\n  autofilled: boolean = false;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private stylesService: StylesService,\r\n    @Optional() @Self() public ngControl: NgControl\r\n  ) {\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.autofilledSubscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.customProperties();\r\n    this.initialize();\r\n    this.autofillMonitor();\r\n  }\r\n\r\n  autofillMonitor() {\r\n    if (this.label) {\r\n      this.autofilledSubscription = timer(0, 100).subscribe(() => {\r\n        this.autofilled = this.inputRef.nativeElement.matches(':autofill');\r\n        if (this.autofilled) {\r\n          this.applyFocusedStyle();\r\n        } else {\r\n          this.moveLabel();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  customProperties() {\r\n    const styles: any = {\r\n      'border-color': (value: any) => {\r\n        this.borderColor = value;\r\n        this.renderer.setStyle(\r\n          this.containerRef.nativeElement,\r\n          'border-color',\r\n          value\r\n        );\r\n      },\r\n    };\r\n\r\n    for (const style in styles) {\r\n      if (styles.hasOwnProperty(style)) {\r\n        const value = this.stylesService.getStyleValue(\r\n          this.elementRef.nativeElement,\r\n          style\r\n        );\r\n        styles[style](value);\r\n      }\r\n    }\r\n  }\r\n\r\n  typeOf(value: any) {\r\n    return typeof value;\r\n  }\r\n\r\n  initialize() {\r\n    this.moveLabel();\r\n    setTimeout(() => {\r\n      this.disabled = this.elementRef?.nativeElement.hasAttribute('disabled');\r\n      this.required = this.elementRef?.nativeElement.hasAttribute('required');\r\n      this.errorText =\r\n        this.elementRef?.nativeElement.attributes['error-text']?.value;\r\n      this.ngControl?.control?.setValue(this.value);\r\n      if (this.type === 'textarea') {\r\n        const width = this.stylesService.getStyleValue(\r\n          this.elementRef.nativeElement,\r\n          'width'\r\n        );\r\n        this.renderer.setStyle(\r\n          this.elementRef.nativeElement,\r\n          'min-width',\r\n          width\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    this.moveLabel();\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  moveLabel() {\r\n    if (this.labelRef) {\r\n      const containerHeight = this.containerRef.nativeElement.offsetHeight;\r\n      if ((this.isFocused || this.isValidValue(this.value)) && this.label) {\r\n        this.applyFocusedStyle();\r\n      } else {\r\n        this.applyDefaultStyle(containerHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyFocusedStyle() {\r\n    this.setLabelStyle('-0.375rem', '0.75rem');\r\n    this._placeholder = this.placeholder;\r\n    this.buildBorderOutlined();\r\n  }\r\n\r\n  private applyDefaultStyle(containerHeight: number) {\r\n    const height = (containerHeight - 14) / 2;\r\n    const top = this.type !== 'textarea' ? `${height / 16}rem` : '0.75rem';\r\n    this.setLabelStyle(top, '0.875rem');\r\n    this._placeholder = '';\r\n    this.drawLineTopBorder();\r\n  }\r\n\r\n  private setLabelStyle(top: string, fontSize: string) {\r\n    const left =\r\n      this.prefix && !this.isFocused && !this.value && !this.autofilled\r\n        ? `${this.prefixWidth()}px`\r\n        : '0.75rem';\r\n    this.renderer.setStyle(this.labelRef?.nativeElement, 'top', top);\r\n    this.renderer.setStyle(this.labelRef?.nativeElement, 'font-size', fontSize);\r\n    this.renderer.setStyle(this.labelRef?.nativeElement, 'left', left);\r\n  }\r\n\r\n  prefixWidth() {\r\n    const prefix = document.getElementById(this.inputPrefixId);\r\n    const result = prefix ? prefix?.offsetWidth : 0;\r\n    return result;\r\n  }\r\n\r\n  onInput(event: Event): void {\r\n    this.value = (event.target as HTMLInputElement).value;\r\n    this.ngControl?.control?.setValue(this.value);\r\n    this.validate();\r\n    if (this.label) {\r\n      this.buildBorderOutlined();\r\n    } else {\r\n      this.drawLineTopBorder();\r\n    }\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    this.isFocused = true;\r\n    this.moveLabel();\r\n  }\r\n\r\n  onBlur(event: FocusEvent) {\r\n    this.isFocused = false;\r\n    this.validate();\r\n    this.moveLabel();\r\n  }\r\n\r\n  buildBorderOutlined() {\r\n    const percent = this.calculateBorderPercent();\r\n    const background = this.calculateBackgroundStyle(percent);\r\n    this.setBorderTop('unset');\r\n    this.renderer.setStyle(\r\n      this.containerRef.nativeElement,\r\n      'background',\r\n      background\r\n    );\r\n  }\r\n\r\n  private calculateBorderPercent(): number {\r\n    const containerWidth = this.containerRef.nativeElement.offsetWidth;\r\n    const labelWidth = this.labelRef.nativeElement.offsetWidth;\r\n    return ((labelWidth + 16) / containerWidth) * 100;\r\n  }\r\n\r\n  private calculateBackgroundStyle(percent: number): string {\r\n    const color = this.isValid ? this.borderColor : ErrorColor;\r\n    return `linear-gradient(to right, ${color} 8px, transparent 8px, transparent ${percent}%, ${color} ${percent}%) no-repeat top/100% 1px`;\r\n  }\r\n\r\n  drawLineTopBorder() {\r\n    const color = this.isValid ? this.borderColor : ErrorColor;\r\n    this.setBorderTop('unset');\r\n    this.renderer.setStyle(\r\n      this.containerRef.nativeElement,\r\n      'background',\r\n      `linear-gradient(to right, transparent 0%, ${color} 0%) no-repeat top/100% 1px`\r\n    );\r\n  }\r\n\r\n  setBorderTop(border: string) {\r\n    this.renderer.setStyle(\r\n      this.containerRef.nativeElement,\r\n      'border-top',\r\n      border\r\n    );\r\n  }\r\n\r\n  validate() {\r\n    this.isValid =\r\n      (!this.pattern && !this.ngControl && !this.required) ||\r\n      this.ngControl?.status?.toLowerCase() === 'valid' ||\r\n      (this.required && this.isValidValue(this.value) && !this.ngControl) ||\r\n      (this.pattern && this.inputRef.nativeElement.validity.valid)\r\n        ? true\r\n        : false;\r\n    const color = this.isValid ? this.borderColor : ErrorColor;\r\n    this.renderer.setStyle(\r\n      this.containerRef.nativeElement,\r\n      'border-color',\r\n      color\r\n    );\r\n  }\r\n\r\n  isValidValue(value: any): boolean {\r\n    return value !== undefined && value !== null && value !== '';\r\n  }\r\n}\r\n","<div #input_container class=\"ngx-outlined-text-field\">\r\n    <label #input_label class=\"ngx-input-label\">{{ label }}</label>\r\n    <div class=\"container\">\r\n      <div\r\n        [id]=\"inputPrefixId\"\r\n        class=\"prefix\"\r\n        *ngIf=\"prefix && type !== 'textarea'\"\r\n      >\r\n        <span *ngIf=\"typeOf(prefix) === 'string'\">{{ prefix }}</span>\r\n        <ng-template\r\n          *ngIf=\"typeOf(prefix) === 'object'\"\r\n          [ngTemplateOutlet]=\"prefix\"\r\n        ></ng-template>\r\n      </div>\r\n      <input\r\n        *ngIf=\"type !== 'textarea'\"\r\n        class=\"ngx-nat-input\"\r\n        #input\r\n        [type]=\"type\"\r\n        [pattern]=\"pattern\"\r\n        [placeholder]=\"_placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        (input)=\"onInput($event)\"\r\n        (focus)=\"onFocus($event)\"\r\n        (blur)=\"onBlur($event)\"\r\n        [autocomplete]=\"autocomplete\"\r\n      />\r\n      <textarea\r\n        class=\"ngx-nat-textarea\"\r\n        *ngIf=\"type === 'textarea'\"\r\n        #input\r\n        [rows]=\"rows\"\r\n        [placeholder]=\"_placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        (input)=\"onInput($event)\"\r\n        (focus)=\"onFocus($event)\"\r\n        (blur)=\"onBlur($event)\"\r\n        [autocomplete]=\"autocomplete\"\r\n      >\r\n      </textarea>\r\n      <div class=\"suffix\" *ngIf=\"suffix && type !== 'textarea'\">\r\n        <span *ngIf=\"typeOf(suffix) === 'string'\">{{ suffix }}</span>\r\n        <ng-template\r\n          *ngIf=\"typeOf(suffix) === 'object'\"\r\n          [ngTemplateOutlet]=\"suffix\"\r\n        ></ng-template>\r\n      </div>\r\n    </div>\r\n\r\n    <span class=\"error-text\" *ngIf=\"!isValid && errorText\">{{\r\n      errorText\r\n    }}</span>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { NgxOutlinedTextFieldComponent } from './ngx-outlined-text-field/ngx-outlined-text-field.component';\r\n\r\n@NgModule({\r\n  exports: [NgxOutlinedTextFieldComponent],\r\n  imports: [NgxOutlinedTextFieldComponent],\r\n})\r\nexport class InputModule {}\r\n","const Type = [\r\n  'text',\r\n  'email',\r\n  'number',\r\n  'password',\r\n  'search',\r\n  'tel',\r\n  'url',\r\n  'textarea',\r\n] as const;\r\nexport type NgxType = (typeof Type)[number];\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}