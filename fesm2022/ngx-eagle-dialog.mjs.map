{"version":3,"file":"ngx-eagle-dialog.mjs","sources":["../../../ngx-eagle/dialog/dialog-ref.ts","../../../ngx-eagle/dialog/dialog.utils.ts","../../../ngx-eagle/dialog/draggable.directive.ts","../../../ngx-eagle/dialog/providers.ts","../../../ngx-eagle/dialog/dialog.component.ts","../../../ngx-eagle/dialog/dialog.service.ts","../../../ngx-eagle/dialog/dialog-close.directive.ts","../../../ngx-eagle/dialog/close-all-dialogs.directive.ts","../../../ngx-eagle/dialog/ngx-eagle-dialog.ts"],"sourcesContent":["import { ComponentRef, TemplateRef } from '@angular/core';\r\nimport { from, merge, Observable, of, Subject } from 'rxjs';\r\nimport { defaultIfEmpty, filter, first } from 'rxjs/operators';\r\n\r\nimport { DialogConfig, GlobalDialogConfig, JustProps } from './types';\r\nimport { DragOffset } from './draggable.directive';\r\n\r\ntype GuardFN<R> = (\r\n  result?: R\r\n) => Observable<boolean> | Promise<boolean> | boolean;\r\n\r\nexport abstract class DialogRef<\r\n  Data = any,\r\n  Result = any,\r\n  Ref extends ComponentRef<any> | TemplateRef<any> =\r\n    | ComponentRef<any>\r\n    | TemplateRef<any>\r\n> {\r\n  ref!: Ref | null;\r\n  data!: Data;\r\n  id!: string;\r\n  backdropClick$!: Observable<MouseEvent>;\r\n  afterClosed$!: Observable<Result>;\r\n\r\n  abstract close(result?: Result): void;\r\n  abstract beforeClose(guard: GuardFN<Result>): void;\r\n  abstract resetDrag(offset?: DragOffset): void;\r\n  abstract updateConfig(config: Partial<DialogConfig>): void;\r\n}\r\n\r\ntype InternalDialogRefProps = Partial<\r\n  Omit<JustProps<InternalDialogRef>, 'id' | 'data'> &\r\n    Pick<InternalDialogRef, 'onClose' | 'onReset'>\r\n>;\r\n\r\nexport class InternalDialogRef extends DialogRef {\r\n  config!: DialogConfig & GlobalDialogConfig;\r\n  override backdropClick$!: Subject<MouseEvent>;\r\n  beforeCloseGuards: GuardFN<unknown>[] = [];\r\n  onClose!: (result?: unknown) => void | null;\r\n  onReset!: (offset?: DragOffset) => void;\r\n\r\n  constructor(props: InternalDialogRefProps = {}) {\r\n    super();\r\n    this.mutate(props);\r\n  }\r\n\r\n  close(result?: unknown): void {\r\n    this.canClose(result)\r\n      .pipe(filter<boolean>(Boolean))\r\n      .subscribe({ next: () => this.onClose(result) });\r\n  }\r\n\r\n  beforeClose(guard: GuardFN<unknown>) {\r\n    this.beforeCloseGuards.push(guard);\r\n  }\r\n\r\n  resetDrag(offset?: DragOffset) {\r\n    this.onReset(offset);\r\n  }\r\n\r\n  canClose(result: unknown): Observable<boolean> {\r\n    const guards$ = this.beforeCloseGuards\r\n      .map((guard) => guard(result))\r\n      .filter((value) => value !== undefined && value !== true)\r\n      .map((value) => {\r\n        return typeof value === 'boolean'\r\n          ? of(value)\r\n          : from(value).pipe(filter((canClose) => !canClose));\r\n      });\r\n\r\n    return merge(...guards$).pipe(defaultIfEmpty(true), first());\r\n  }\r\n\r\n  mutate(props: InternalDialogRefProps) {\r\n    Object.assign(this, props);\r\n    this.data = this.config.data;\r\n    this.id = this.config.id;\r\n  }\r\n\r\n  updateConfig(config: Partial<DialogConfig & GlobalDialogConfig>) {\r\n    this.mutate({\r\n      config: {\r\n        ...this.config,\r\n        ...config,\r\n      },\r\n    });\r\n  }\r\n\r\n  asDialogRef(): DialogRef {\r\n    return this;\r\n  }\r\n}\r\n","function isNil(value: unknown): value is undefined | null {\r\n  return value === undefined || value === null;\r\n}\r\n\r\nfunction isString(value: unknown): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function coerceCssPixelValue(value: any): string {\r\n  if (isNil(value)) {\r\n    return '';\r\n  }\r\n  return isString(value) ? value : `${value}px`;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { filter, map, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { DragConstraint } from './types';\r\n\r\nexport type DragOffset = {\r\n  x?: number;\r\n  y?: number;\r\n};\r\n\r\n@Directive({\r\n  selector: '[dialogDraggable]',\r\n  standalone: true,\r\n})\r\nexport class DialogDraggableDirective\r\n  implements AfterViewInit, OnChanges, OnDestroy\r\n{\r\n  @Input()\r\n  dialogDragHandle!: string | Element;\r\n  @Input()\r\n  dialogDragTarget!: string | Element;\r\n  @Input()\r\n  dialogDragEnabled = false;\r\n  @Input()\r\n  set dialogDragOffset(offset: DragOffset) {\r\n    this.reset(offset);\r\n  }\r\n  @Input()\r\n  dragConstraint!: DragConstraint;\r\n\r\n  private host = inject(ElementRef);\r\n  private zone = inject(NgZone);\r\n  private target!: HTMLElement | null;\r\n  private handle!: HTMLElement;\r\n  private delta = { x: 0, y: 0 };\r\n  private offset = { x: 0, y: 0 };\r\n  private enabled = true;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  public ngAfterViewInit(): void {\r\n    if (!this.enabled) {\r\n      return;\r\n    }\r\n\r\n    this.init();\r\n  }\r\n\r\n  public ngOnChanges() {\r\n    if (!this.enabled && this.dialogDragEnabled && this.dialogDragTarget) {\r\n      this.enabled = true;\r\n      if (this.handle) {\r\n        this.handle.style.setProperty('cursor', 'move');\r\n      } else if (this.enabled) {\r\n        this.init();\r\n      }\r\n    }\r\n\r\n    if (!this.dialogDragEnabled) {\r\n      this.enabled = false;\r\n      if (this.handle) {\r\n        this.handle.style.setProperty('cursor', '');\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n  }\r\n\r\n  public reset(offset?: DragOffset): void {\r\n    const defaultValues = { x: 0, y: 0 };\r\n    this.offset = { ...defaultValues, ...offset };\r\n    this.delta = { ...defaultValues };\r\n    this.translate();\r\n  }\r\n\r\n  private setupEvents() {\r\n    this.zone.runOutsideAngular(() => {\r\n      const mousedown$ = fromEvent<MouseEvent>(this.handle, 'mousedown');\r\n      const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\r\n      const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\r\n\r\n      const mousedrag$ = mousedown$.pipe(\r\n        filter(() => this.enabled),\r\n        map((event) => ({\r\n          startX: event.clientX,\r\n          startY: event.clientY,\r\n        })),\r\n        switchMap(({ startX, startY }) =>\r\n          mousemove$.pipe(\r\n            map((event) => {\r\n              event.preventDefault();\r\n              this.delta = {\r\n                x: event.clientX - startX,\r\n                y: event.clientY - startY,\r\n              };\r\n              if (this.dragConstraint === 'constrain') {\r\n                this.checkConstraint();\r\n              }\r\n            }),\r\n            takeUntil(mouseup$)\r\n          )\r\n        ),\r\n        takeUntil(this.destroy$)\r\n      );\r\n\r\n      mousedrag$.subscribe(() => {\r\n        if (this.delta.x === 0 && this.delta.y === 0) {\r\n          return;\r\n        }\r\n\r\n        this.translate();\r\n      });\r\n\r\n      mouseup$\r\n        .pipe(\r\n          filter(() => this.enabled),\r\n          filter(() => this.delta.x !== 0 || this.delta.y !== 0),\r\n          takeUntil(this.destroy$)\r\n        )\r\n        .subscribe(() => {\r\n          if (this.dragConstraint === 'bounce') {\r\n            this.checkConstraint();\r\n            this.translate();\r\n          }\r\n          this.offset.x += this.delta.x;\r\n          this.offset.y += this.delta.y;\r\n          this.delta = { x: 0, y: 0 };\r\n        });\r\n    });\r\n  }\r\n\r\n  private translate() {\r\n    if (this.target) {\r\n      this.zone.runOutsideAngular(() => {\r\n        requestAnimationFrame(() => {\r\n          const transform = `translate(${this.translateX}px, ${this.translateY}px)`;\r\n          this.target?.style.setProperty('transform', transform);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private get translateX(): number {\r\n    return this.offset.x + this.delta.x;\r\n  }\r\n\r\n  private get translateY(): number {\r\n    return this.offset.y + this.delta.y;\r\n  }\r\n\r\n  private init() {\r\n    if (!this.dialogDragTarget) {\r\n      throw new Error('You need to specify the drag target');\r\n    }\r\n\r\n    this.handle =\r\n      this.dialogDragHandle instanceof Element\r\n        ? this.dialogDragHandle\r\n        : typeof this.dialogDragHandle === 'string' && this.dialogDragHandle\r\n        ? document.querySelector(this.dialogDragHandle as string)\r\n        : this.host.nativeElement;\r\n        \r\n    if (this.handle && this.enabled) {\r\n      this.handle.style.setProperty('cursor', 'move');\r\n    }\r\n    this.target =\r\n      this.dialogDragTarget instanceof HTMLElement\r\n        ? this.dialogDragTarget\r\n        : document.querySelector(this.dialogDragTarget as string);\r\n\r\n    this.setupEvents();\r\n    this.translate();\r\n  }\r\n\r\n  private checkConstraint(): void {\r\n    if (this.target) {\r\n      const { width, height } = this.target.getBoundingClientRect();\r\n      const { innerWidth, innerHeight } = window;\r\n\r\n      const verticalDistance =\r\n        this.translateY > 0\r\n          ? this.translateY + height / 2\r\n          : this.translateY - height / 2;\r\n      const maxVerticalDistance = innerHeight / 2;\r\n      const horizontalDistance =\r\n        this.translateX > 0\r\n          ? this.translateX + width / 2\r\n          : this.translateX - width / 2;\r\n      const maxHorizontalDistance = innerWidth / 2;\r\n\r\n      if (-maxVerticalDistance > verticalDistance) {\r\n        this.delta.y = -maxVerticalDistance + height / 2 - this.offset.y;\r\n      }\r\n      if (maxVerticalDistance < verticalDistance) {\r\n        this.delta.y = maxVerticalDistance - height / 2 - this.offset.y;\r\n      }\r\n      if (-maxHorizontalDistance > horizontalDistance) {\r\n        this.delta.x = -maxHorizontalDistance + width / 2 - this.offset.x;\r\n      }\r\n      if (maxHorizontalDistance < horizontalDistance) {\r\n        this.delta.x = maxHorizontalDistance - width / 2 - this.offset.x;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  inject,\r\n  InjectionToken,\r\n  makeEnvironmentProviders,\r\n} from '@angular/core';\r\n\r\nimport { DialogConfig, GlobalDialogConfig } from './types';\r\n\r\nexport const DIALOG_DOCUMENT_REF = new InjectionToken(\r\n  'A reference to the document. Useful for iframes that want appends to parent window',\r\n  {\r\n    providedIn: 'root',\r\n    factory() {\r\n      return inject(DOCUMENT);\r\n    },\r\n  }\r\n);\r\n\r\nexport function defaultGlobalConfig(): Partial<\r\n  GlobalDialogConfig & DialogConfig\r\n> {\r\n  return {\r\n    id: undefined,\r\n    container: inject(DIALOG_DOCUMENT_REF).body,\r\n    backdrop: true,\r\n    closeButton: true,\r\n    enableClose: {\r\n      backdrop: true,\r\n      escape: true,\r\n    },\r\n    draggable: false,\r\n    dragConstraint: 'none',\r\n    resizable: false,\r\n    size: 'md',\r\n    windowClass: undefined,\r\n    width: undefined,\r\n    minWidth: undefined,\r\n    maxWidth: undefined,\r\n    height: undefined,\r\n    minHeight: undefined,\r\n    maxHeight: undefined,\r\n    data: undefined,\r\n    vcr: undefined,\r\n    sizes: {\r\n      sm: {\r\n        height: 'auto',\r\n        width: '400px',\r\n      },\r\n      md: {\r\n        height: 'auto',\r\n        width: '560px',\r\n      },\r\n      lg: {\r\n        height: 'auto',\r\n        width: '800px',\r\n      },\r\n      fullScreen: {\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n    },\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n  };\r\n}\r\n\r\nexport const GLOBAL_DIALOG_CONFIG = new InjectionToken<\r\n  Partial<GlobalDialogConfig>\r\n>('Global dialog config token', {\r\n  providedIn: 'root',\r\n  factory() {\r\n    return defaultGlobalConfig();\r\n  },\r\n});\r\n\r\nexport const NODES_TO_INSERT = new InjectionToken<Element[]>(\r\n  'Nodes inserted into the dialog'\r\n);\r\n\r\nexport function provideDialogConfig(config: Partial<GlobalDialogConfig>) {\r\n  return makeEnvironmentProviders([\r\n    {\r\n      provide: GLOBAL_DIALOG_CONFIG,\r\n      useFactory() {\r\n        const defaultConfig = defaultGlobalConfig();\r\n        return {\r\n          ...defaultConfig,\r\n          ...config,\r\n          sizes: {\r\n            ...defaultConfig.sizes,\r\n            ...config.sizes,\r\n          },\r\n        };\r\n      },\r\n    },\r\n  ]);\r\n}\r\n\r\nexport function provideDialogDocRef(doc: Document) {\r\n  return makeEnvironmentProviders([\r\n    {\r\n      provide: DIALOG_DOCUMENT_REF,\r\n      useValue: doc,\r\n    },\r\n  ]);\r\n}\r\n","import { CommonModule, DOCUMENT } from '@angular/common';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  inject,\r\n  isDevMode,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { fromEvent, merge, Subject } from 'rxjs';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\n\r\nimport { InternalDialogRef } from './dialog-ref';\r\nimport { NgxDialog } from './dialog.service';\r\nimport { coerceCssPixelValue } from './dialog.utils';\r\nimport { DialogDraggableDirective, DragOffset } from './draggable.directive';\r\nimport { NODES_TO_INSERT } from './providers';\r\n\r\n@Component({\r\n  selector: 'ngx-dialog',\r\n  standalone: true,\r\n  imports: [DialogDraggableDirective, CommonModule],\r\n  template: `\r\n    <div\r\n      #backdrop\r\n      class=\"ngx-dialog-backdrop\"\r\n      [hidden]=\"!config.backdrop\"\r\n      [class.ngx-dialog-backdrop-visible]=\"config.backdrop\"\r\n    >\r\n      <div\r\n        #dialog\r\n        class=\"ngx-dialog-content\"\r\n        [class.ngx-dialog-resizable]=\"config.resizable\"\r\n        [ngStyle]=\"styles\"\r\n        role=\"dialog\"\r\n      >\r\n        <div\r\n          *ngIf=\"config.draggable\"\r\n          class=\"ngx-drag-marker\"\r\n          dialogDraggable\r\n          [dialogDragEnabled]=\"true\"\r\n          [dialogDragTarget]=\"dialog\"\r\n          [dragConstraint]=\"config.dragConstraint\"\r\n        ></div>\r\n        <div\r\n          *ngIf=\"config.closeButton\"\r\n          class=\"ngx-close-dialog\"\r\n          (click)=\"closeDialog()\"\r\n        >\r\n          <svg viewBox=\"0 0 329.26933 329\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: [`./dialog.component.scss`],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogComponent implements OnInit, OnDestroy {\r\n  dialogRef = inject(InternalDialogRef);\r\n  config = this.dialogRef.config;\r\n\r\n  private size = this.config.sizes?.[this.config.size || 'md'];\r\n  styles = {\r\n    width: coerceCssPixelValue(this.config.width || this.size?.width),\r\n    minWidth: coerceCssPixelValue(this.config.minWidth || this.size?.minWidth),\r\n    maxWidth: coerceCssPixelValue(this.config.maxWidth || this.size?.maxWidth),\r\n    height: coerceCssPixelValue(this.config.height || this.size?.height),\r\n    minHeight: coerceCssPixelValue(\r\n      this.config.minHeight || this.size?.minHeight\r\n    ),\r\n    maxHeight: coerceCssPixelValue(\r\n      this.config.maxHeight || this.size?.maxHeight\r\n    ),\r\n  };\r\n\r\n  @ViewChild('backdrop', { static: true })\r\n  private backdrop!: ElementRef<HTMLDivElement>;\r\n\r\n  @ViewChild('dialog', { static: true })\r\n  private dialogElement!: ElementRef<HTMLElement>;\r\n\r\n  @ViewChild(DialogDraggableDirective, { static: false })\r\n  private draggable!: DialogDraggableDirective;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  private nodes = inject(NODES_TO_INSERT);\r\n\r\n  private document = inject(DOCUMENT);\r\n  private host: HTMLElement = inject(ElementRef).nativeElement;\r\n\r\n  private NgxDialog = inject(NgxDialog);\r\n\r\n  constructor() {\r\n    this.nodes.forEach((node) => this.host.appendChild(node));\r\n    if (this.config.windowClass) {\r\n      const classNames = this.config.windowClass.split(/\\s/).filter((x) => x);\r\n      classNames.forEach((name) => this.host.classList.add(name));\r\n    }\r\n\r\n    if (!this.config.id) {\r\n      const id = `dialog-${crypto.randomUUID()}`;\r\n      this.config.id = id;\r\n      this.dialogRef.updateConfig({ id });\r\n      if (isDevMode()) {\r\n        console.warn(\r\n          `[@ngx/dialog]: Dialog id is not provided, generated id is ${id}, providing an id is recommended to prevent unexpected multiple behavior`\r\n        );\r\n      }\r\n    }\r\n    this.host.id = this.config.id;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const backdrop = this.config.backdrop\r\n      ? this.backdrop.nativeElement\r\n      : this.document.body;\r\n    const dialogElement = this.dialogElement.nativeElement;\r\n\r\n    const backdropClick$ = fromEvent<MouseEvent>(backdrop, 'click', {\r\n      capture: true,\r\n    }).pipe(filter(({ target }) => !dialogElement.contains(target as Element)));\r\n\r\n    backdropClick$.pipe(takeUntil(this.destroy$)).subscribe(this.dialogRef.backdropClick$);\r\n\r\n    const closeConfig =\r\n      typeof this.config.enableClose === 'boolean' ||\r\n      this.config.enableClose === 'onlyLastStrategy'\r\n        ? {\r\n            escape: this.config.enableClose,\r\n            backdrop: this.config.enableClose,\r\n          }\r\n        : this.config.enableClose;\r\n    merge(\r\n      fromEvent<KeyboardEvent>(this.document.body, 'keyup').pipe(\r\n        filter(({ key }) => key === 'Escape'),\r\n        map(() => closeConfig.escape)\r\n      ),\r\n      backdropClick$.pipe(map(() => closeConfig.backdrop))\r\n    )\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter((strategy) => {\r\n          if (!strategy) return false;\r\n          if (strategy === 'onlyLastStrategy') {\r\n            return this.NgxDialog.isLastOpened(this.config.id);\r\n          }\r\n          return true;\r\n        })\r\n      )\r\n      .subscribe(() => this.closeDialog());\r\n    this.nodes.forEach((node) => dialogElement.appendChild(node));\r\n    if (this.config.zIndexGetter) {\r\n      const zIndex = this.config.zIndexGetter().toString();\r\n      backdrop.style.setProperty('--dialog-backdrop-z-index', zIndex);\r\n    }\r\n  }\r\n\r\n  reset(offset?: DragOffset): void {\r\n    if (this.config.draggable) {\r\n      this.draggable.reset(offset);\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  createComponent,\r\n  ElementRef,\r\n  EnvironmentInjector,\r\n  inject,\r\n  Injectable,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewRef,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nimport { DialogRef, InternalDialogRef } from './dialog-ref';\r\nimport { DialogComponent } from './dialog.component';\r\nimport { DragOffset } from './draggable.directive';\r\nimport { DIALOG_DOCUMENT_REF, GLOBAL_DIALOG_CONFIG, NODES_TO_INSERT } from './providers';\r\nimport { AttachOptions, DialogConfig, ExtractData, ExtractResult, GlobalDialogConfig } from './types';\r\n\r\nconst OVERFLOW_HIDDEN_CLASS = 'ngx-dialog-hidden';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NgxDialog {\r\n  private appRef = inject(ApplicationRef);\r\n  private injector = inject(EnvironmentInjector);\r\n  private document = inject(DIALOG_DOCUMENT_REF);\r\n  private globalConfig = inject(GLOBAL_DIALOG_CONFIG);\r\n\r\n  dialogs: DialogRef[] = [];\r\n  private hasOpenDialogSub = new BehaviorSubject<boolean>(false);\r\n  hasOpenDialogs$ = this.hasOpenDialogSub.asObservable();\r\n\r\n  hasOpenDialogs() {\r\n    return this.dialogs.length > 0;\r\n  }\r\n\r\n  isOpen(id: string) {\r\n    return this.dialogs.some((ref) => ref.id === id);\r\n  }\r\n\r\n  isLastOpened(idOrRef: string | DialogRef): boolean {\r\n    const id = idOrRef instanceof DialogRef ? idOrRef.id : idOrRef;\r\n    return this.dialogs.at(-1)?.id === id;\r\n  }\r\n\r\n  closeAll() {\r\n    this.dialogs.forEach((dialog) => dialog.close());\r\n  }\r\n\r\n  open(template: TemplateRef<any>, config?: Partial<DialogConfig>): DialogRef;\r\n  open<C extends Type<any>>(\r\n    component: C,\r\n    config?: Partial<DialogConfig<ExtractData<InstanceType<C>>>>,\r\n  ): DialogRef<ExtractData<InstanceType<C>>, ExtractResult<InstanceType<C>>>;\r\n  open(componentOrTemplate: any, config: Partial<DialogConfig> = {}): DialogRef {\r\n    const mergedConfig = this.mergeConfig(config);\r\n\r\n    if (isComponent(componentOrTemplate)) {\r\n      mergedConfig.id ??= componentOrTemplate.name;\r\n    }\r\n\r\n    const dialogRef = new InternalDialogRef({\r\n      config: mergedConfig,\r\n      backdropClick$: new Subject<MouseEvent>(),\r\n    });\r\n\r\n    const attachOptions = isTemplate(componentOrTemplate)\r\n      ? this.openTemplate(componentOrTemplate, dialogRef)\r\n      : isComponent(componentOrTemplate)\r\n      ? this.openComponent(componentOrTemplate, dialogRef)\r\n      : throwMustBeAComponentOrATemplateRef(componentOrTemplate);\r\n\r\n    if (this.isOpen(dialogRef.id)) {\r\n      attachOptions.view.destroy();\r\n    }\r\n\r\n    mergedConfig.onOpen?.();\r\n    this.dialogs.push(dialogRef);\r\n    this.hasOpenDialogSub.next(true);\r\n    if (this.dialogs.length === 1) {\r\n      this.document.body.classList.add(OVERFLOW_HIDDEN_CLASS);\r\n    }\r\n    return this.attach(dialogRef, attachOptions);\r\n  }\r\n\r\n  private openTemplate(template: TemplateRef<any>, dialogRef: InternalDialogRef) {\r\n    const config = dialogRef.config;\r\n    const context = {\r\n      $implicit: dialogRef,\r\n      config,\r\n    };\r\n    const view = config.vcr?.createEmbeddedView(template, context) || template.createEmbeddedView(context);\r\n    return {\r\n      ref: template,\r\n      view,\r\n      attachToApp: !config.vcr,\r\n    };\r\n  }\r\n\r\n  private openComponent(Component: Type<any>, dialogRef: InternalDialogRef) {\r\n    const componentRef = createComponent(Component, {\r\n      elementInjector: Injector.create({\r\n        providers: [\r\n          {\r\n            provide: DialogRef,\r\n            useValue: dialogRef,\r\n          },\r\n        ],\r\n        parent: dialogRef.config.vcr?.injector || this.injector,\r\n      }),\r\n      environmentInjector: this.injector,\r\n    });\r\n\r\n    return {\r\n      ref: componentRef,\r\n      view: componentRef.hostView,\r\n      attachToApp: true,\r\n    };\r\n  }\r\n\r\n  private attach(dialogRef: InternalDialogRef, { ref, view, attachToApp }: AttachOptions): DialogRef<any, any, any> {\r\n    const dialog = this.createDialog(dialogRef, view);\r\n\r\n    const container = getNativeElement(dialogRef.config.container);\r\n\r\n    const hooks = {\r\n      after: new Subject<unknown>(),\r\n    };\r\n\r\n    const onClose = (result: unknown) => {\r\n      this.globalConfig.onClose?.();\r\n      this.dialogs = this.dialogs.filter(({ id }) => dialogRef.id !== id);\r\n      this.hasOpenDialogSub.next(this.hasOpenDialogs());\r\n\r\n      container.removeChild(dialog.location.nativeElement);\r\n      this.appRef.detachView(dialog.hostView);\r\n      this.appRef.detachView(view);\r\n      dialog.destroy();\r\n      view.destroy();\r\n      hooks.after.next(result);\r\n      hooks.after.complete();\r\n      if (!this.hasOpenDialogs()) {\r\n        this.document.body.classList.remove(OVERFLOW_HIDDEN_CLASS);\r\n      }\r\n    };\r\n    const onReset = (offset?: DragOffset) => {\r\n      dialog.instance.reset(offset);\r\n    };\r\n\r\n    dialogRef.mutate({\r\n      ref,\r\n      onClose,\r\n      afterClosed$: hooks.after.asObservable(),\r\n      onReset,\r\n    });\r\n    container.appendChild(dialog.location.nativeElement);\r\n    this.appRef.attachView(dialog.hostView);\r\n    if (attachToApp) {\r\n      this.appRef.attachView(view);\r\n    }\r\n    return dialogRef.asDialogRef();\r\n  }\r\n\r\n  private createDialog(dialogRef: InternalDialogRef, view: ViewRef) {\r\n    return createComponent(DialogComponent, {\r\n      elementInjector: Injector.create({\r\n        providers: [\r\n          {\r\n            provide: InternalDialogRef,\r\n            useValue: dialogRef,\r\n          },\r\n          {\r\n            provide: NODES_TO_INSERT,\r\n            useValue: (view as any).rootNodes,\r\n          },\r\n        ],\r\n        parent: this.injector,\r\n      }),\r\n      environmentInjector: this.injector,\r\n    });\r\n  }\r\n\r\n  private mergeConfig(inlineConfig: Partial<DialogConfig>): DialogConfig & GlobalDialogConfig {\r\n    return {\r\n      ...this.globalConfig,\r\n      ...inlineConfig,\r\n      sizes: this.globalConfig?.sizes,\r\n    } as DialogConfig & GlobalDialogConfig;\r\n  }\r\n}\r\n\r\nfunction throwMustBeAComponentOrATemplateRef(value: unknown): never {\r\n  throw new TypeError(`Dialog must receive a Component or a TemplateRef, but this has been passed instead: ${value}`);\r\n}\r\n\r\nfunction getNativeElement(element: Element | ElementRef): Element {\r\n  return element instanceof ElementRef ? element.nativeElement : element;\r\n}\r\n\r\nfunction isTemplate(tplOrComp: any): tplOrComp is TemplateRef<any> {\r\n  return tplOrComp instanceof TemplateRef;\r\n}\r\n\r\nfunction isComponent(tplOrComp: any): tplOrComp is Type<any> {\r\n  return !isTemplate(tplOrComp) && typeof tplOrComp === 'function';\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { DialogRef } from './dialog-ref';\r\nimport { NgxDialog } from './dialog.service';\r\n\r\n@Directive({\r\n  selector: '[dialogClose]',\r\n  standalone: true,\r\n})\r\nexport class DialogCloseDirective implements OnInit {\r\n  private host: ElementRef<HTMLElement> = inject(ElementRef);\r\n  private NgxDialog = inject(NgxDialog);\r\n  ref: DialogRef | undefined | null = inject(DialogRef, { optional: true });\r\n\r\n  @Input()\r\n  dialogClose: any;\r\n\r\n  ngOnInit() {\r\n    this.ref = this.ref || this.getRefFromParent();\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClose() {\r\n    this.ref?.close(this.dialogClose);\r\n  }\r\n\r\n  private getRefFromParent() {\r\n    let parent = this.host.nativeElement.parentElement;\r\n    while (parent && parent.localName !== 'ngx-dialog') {\r\n      parent = parent.parentElement;\r\n    }\r\n    return parent\r\n      ? this.NgxDialog.dialogs.find(({ id }) => id === parent?.id)\r\n      : null;\r\n  }\r\n}\r\n","import { Directive, HostListener, inject } from '@angular/core';\r\n\r\nimport { NgxDialog } from './dialog.service';\r\n\r\n@Directive({\r\n  selector: '[closeAllDialogs]',\r\n  standalone: true,\r\n})\r\nexport class CloseAllDialogsDirective {\r\n  private NgxDialog = inject(NgxDialog);\r\n\r\n  @HostListener('click')\r\n  onClose() {\r\n    this.NgxDialog.closeAll();\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}