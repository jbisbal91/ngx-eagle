{"version":3,"file":"ngx-eagle-carousel.mjs","sources":["../../../projects/ngx-eagle/carousel/carousel-item/carousel-item.component.ts","../../../projects/ngx-eagle/carousel/carousel.component.ts","../../../projects/ngx-eagle/carousel/carousel.module.ts","../../../projects/ngx-eagle/carousel/ngx-eagle-carousel.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { Carousel } from '../carousel.interface';\r\n\r\n@Component({\r\n  selector: 'ngx-carousel-item',\r\n  template: `\r\n    <div class=\"ngx-carousel-item\" [id]=\"id\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: 'ngx-carousel-item',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class CarouselItemComponent implements Carousel, OnInit {\r\n  public id: string = '';\r\n  public isActive: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.guid();\r\n  }\r\n\r\n  guid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        const r = (Math.random() * 16) | 0,\r\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  QueryList,\r\n  booleanAttribute,\r\n} from '@angular/core';\r\nimport { CarouselItemComponent } from './carousel-item/carousel-item.component';\r\nimport { NgForOf } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ngx-carousel',\r\n  template: `\r\n    <div class=\"ngx-carousel\">\r\n      <div class=\"slick-initialized slick-slider\">\r\n        <div class=\"slick-list\">\r\n          <div class=\"slick-track\">\r\n            <ng-content></ng-content>\r\n          </div>\r\n        </div>\r\n\r\n        <ul class=\"slick-list slick-dots slick-dots-bottom\">\r\n          <li\r\n            [class.slick-active]=\"carouselItem.isActive\"\r\n            *ngFor=\"let carouselItem of carouselItems\"\r\n            (click)=\"onClick(carouselItem)\"\r\n          >\r\n            <button>{{ carouselItem.id }}</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'ngx-carousel',\r\n  },\r\n  standalone: true,\r\n  imports: [NgForOf],\r\n})\r\nexport class CarouselComponent implements AfterContentInit {\r\n  @ContentChildren(CarouselItemComponent)\r\n  public carouselItems!: QueryList<CarouselItemComponent>;\r\n  @Input({ transform: booleanAttribute }) ngxAutoPlay!: boolean;\r\n  @Input() ngxAutoPlaySpeed: number = 3000;\r\n\r\n  currentItem!: CarouselItemComponent;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.carouselItems.first.isActive = true;\r\n    this.currentItem = this.carouselItems.first;\r\n    this.cdr.markForCheck();\r\n    if (this.ngxAutoPlay) {\r\n      this.autoPlay();\r\n    }\r\n  }\r\n\r\n  autoPlay(index: number = 0) {\r\n    setTimeout(() => {\r\n      this.onClick(this.carouselItems.get(index));\r\n      index = index === this.carouselItems.length - 1 ? 0 : ++index;\r\n      this.autoPlay(index);\r\n    }, this.ngxAutoPlaySpeed);\r\n  }\r\n\r\n  onClick(carouselItem: any) {\r\n    this.carouselItems?.forEach((ci: any) => {\r\n      ci.isActive = ci.id === carouselItem.id ? true : false;\r\n    });\r\n    const element = document.getElementById(carouselItem.id);\r\n    element?.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CarouselComponent } from './carousel.component';\r\nimport { CarouselItemComponent } from './carousel-item/carousel-item.component';\r\n\r\n@NgModule({\r\n  exports: [CarouselComponent, CarouselItemComponent],\r\n  imports: [CarouselComponent, CarouselItemComponent],\r\n})\r\nexport class CarouselModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}