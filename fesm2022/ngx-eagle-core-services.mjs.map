{"version":3,"file":"ngx-eagle-core-services.mjs","sources":["../../../ngx-eagle/core/services/autofill/autofill.service.ts","../../../ngx-eagle/core/services/color-converter/color-converter.service.ts","../../../ngx-eagle/core/services/guid/guid.service.ts","../../../ngx-eagle/core/services/styles/styles.service.ts","../../../ngx-eagle/core/services/ngx-eagle-core-services.ts"],"sourcesContent":["import { ElementRef, Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport type AutofillEvent = {\r\n  target: Element;\r\n  isAutofilled: boolean;\r\n};\r\n\r\ntype MonitoredElementInfo = {\r\n  readonly subject: Subject<AutofillEvent>;\r\n  unlisten: () => void;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Autofill {\r\n  private _monitoredElements = new Map<Element, MonitoredElementInfo>();\r\n  constructor(private _ngZone: NgZone) {}\r\n\r\n  monitor(element: ElementRef<Element>): Observable<AutofillEvent>;\r\n\r\n  monitor(\r\n    elementOrRef: Element | ElementRef<Element>\r\n  ): Observable<AutofillEvent> {\r\n    const result = new Subject<AutofillEvent>();\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable } from '@angular/core';\r\nimport { ColorContrast, HSL, RGB, PresetColors } from 'ngx-eagle/core/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColorConverter {\r\n  constructor() {}\r\n\r\n  //--------------START VALIDATIONS ------------------\r\n\r\n  public isPresetColors(presetColors: string) {\r\n    if (!presetColors) throw new TypeError(`Invalid argument; has no value.`);\r\n    PresetColors[presetColors.toLowerCase()];\r\n    return PresetColors[presetColors.toLowerCase()] ? true : false;\r\n  }\r\n\r\n  public isHex(hex: string): boolean {\r\n    if (!hex) throw new TypeError(`Invalid argument; has no value.`);\r\n    const regex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\r\n    return regex.test(hex);\r\n  }\r\n\r\n  public isRGB(rgb: string): boolean {\r\n    if (!rgb) throw new TypeError(`Invalid argument; has no value.`);\r\n    const regex =\r\n      /^rgb\\(\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*\\)$/;\r\n    return regex.test(rgb);\r\n  }\r\n\r\n  public isRGBA(rgba: string): boolean {\r\n    if (!rgba) throw new TypeError(`Invalid argument; has no value.`);\r\n    const regex =\r\n      /^rgba\\(\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((1(\\.0)?)|0(\\.\\d+)?)\\s*\\)$/;\r\n    return regex.test(rgba);\r\n  }\r\n\r\n  public isHSL(hsl: string): boolean {\r\n    if (!hsl) throw new TypeError(`Invalid argument; has no value.`);\r\n    const regex =\r\n      /^hsl\\(\\s*((\\d{1,2}|[1-2]\\d{2}|3[0-5]\\d)|360)\\s*,\\s*(\\d{1,2}|100)%\\s*,\\s*(\\d{1,2}|100)%\\s*\\)$/;\r\n    return regex.test(hsl);\r\n  }\r\n\r\n  public isHSLA(hsla: string): boolean {\r\n    if (!hsla) throw new TypeError(`Invalid argument; has no value.`);\r\n    const regex =\r\n      /^hsla\\(\\s*((\\d{1,2}|[1-2]\\d{2}|3[0-5]\\d)|360)\\s*,\\s*(\\d{1,2}|100)%\\s*,\\s*(\\d{1,2}|100)%\\s*,\\s*(0(\\.\\d+)?|1(\\.0)?)\\s*\\)$/;\r\n    return regex.test(hsla);\r\n  }\r\n  //--------------END VALIDATIONS ------------------\r\n\r\n  contrastingColors(color: string): ColorContrast {\r\n    let rgb: RGB;\r\n\r\n    if (this.isPresetColors(color)) {\r\n      rgb = this.hexToRgb(this.nameSVGToHex(color));\r\n    }\r\n\r\n    if (this.isHex(color)) {\r\n      rgb = this.hexToRgb(color);\r\n    }\r\n\r\n    if (this.isRGB(color)) {\r\n      rgb = this.rgbToObject(color);\r\n    }\r\n\r\n    if (this.isRGBA(color)) {\r\n      rgb = this.rgbaToObject(color);\r\n    }\r\n\r\n    if (this.isHSL(color)) {\r\n      rgb = this.hslToRgb(color);\r\n    }\r\n    if (this.isHSLA(color)) {\r\n      rgb = this.hslaToRgb(color);\r\n    }\r\n\r\n    const buildOverlayColor = () => {\r\n      const luminance = this.luminance(rgb);\r\n      return luminance > 0.5 ? this.changeRgbLuminance(rgb, 0.35) : '#ffffff';\r\n    };\r\n    const backgroundColor = color;\r\n    const overlayColor = buildOverlayColor();\r\n    return { backgroundColor: backgroundColor, overlayColor: overlayColor };\r\n  }\r\n\r\n  changeRgbLuminance(rgb: RGB, luminance: number): string {\r\n    const newR = Math.max(0, Math.floor(rgb.r * luminance));\r\n    const newG = Math.max(0, Math.floor(rgb.g * luminance));\r\n    const newB = Math.max(0, Math.floor(rgb.b * luminance));\r\n    return `rgb(${newR},${newG},${newB})`;\r\n  }\r\n\r\n  luminance(color: RGB) {\r\n    return (0.299 * color.r + 0.587 * color.g + 0.114 * color.b) / 255;\r\n  }\r\n\r\n  //------------- TO RGB -------------\r\n  rgbToObject(rgb: string): RGB {\r\n    if (!rgb) throw new TypeError(`Invalid argument; has no value.`);\r\n    const match = rgb.match(\r\n      /^rgb\\(\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*\\)$/\r\n    );\r\n    if (!match) throw new TypeError(`Invalid RGB color format: ${rgb}`);\r\n\r\n    return {\r\n      r: parseInt(match[1]),\r\n      g: parseInt(match[2]),\r\n      b: parseInt(match[3]),\r\n    };\r\n  }\r\n\r\n  rgbaToObject(rgba: string): RGB {\r\n    if (!rgba) throw new TypeError(`Invalid argument; has no value.`);\r\n    const match = rgba.match(\r\n      /^rgba\\(\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|0)\\s*,\\s*((1(\\.0)?)|0(\\.\\d+)?)\\s*\\)$/\r\n    );\r\n    if (!match) throw new TypeError(`Invalid RGBA color format: ${rgba}`);\r\n\r\n    const r = parseInt(match[1]);\r\n    const g = parseInt(match[3]);\r\n    const b = parseInt(match[5]);\r\n    const a = parseFloat(match[7]);\r\n\r\n    // Convertir el color con opacidad a RGB\r\n    const rgb = {\r\n      r: Math.round((1 - a) * 255 + a * r),\r\n      g: Math.round((1 - a) * 255 + a * g),\r\n      b: Math.round((1 - a) * 255 + a * b),\r\n    };\r\n    return rgb;\r\n  }\r\n\r\n  hexToRgb(hex: string): RGB {\r\n    let hexCode = hex.startsWith('#') ? hex.slice(1) : hex;\r\n    if (hexCode.length === 3) {\r\n      hexCode = hexCode\r\n        .split('')\r\n        .map((char) => char + char)\r\n        .join('');\r\n    }\r\n    const bigint = parseInt(hexCode, 16);\r\n    const r = (bigint >> 16) & 255;\r\n    const g = (bigint >> 8) & 255;\r\n    const b = bigint & 255;\r\n    return { r, g, b };\r\n  }\r\n\r\n  hslToRgb(hsl: string): RGB {\r\n    if (!hsl) throw new TypeError(`Invalid argument; has no value.`);\r\n    const match = hsl.match(/^hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)$/);\r\n    if (!match) throw new TypeError(`Invalid HSL color format: ${hsl}`);\r\n\r\n    const h = parseInt(match[1]) / 360;\r\n    const s = parseInt(match[2]) / 100;\r\n    const l = parseInt(match[3]) / 100;\r\n\r\n    let r, g, b;\r\n    if (s === 0) {\r\n      r = g = b = l; // Achromatic\r\n    } else {\r\n      const hue2rgb = (p: number, q: number, t: number) => {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      };\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      const p = 2 * l - q;\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return {\r\n      r: Math.round(r * 255),\r\n      g: Math.round(g * 255),\r\n      b: Math.round(b * 255),\r\n    };\r\n  }\r\n\r\n  hslaToRgb(hsla: string): RGB {\r\n    if (!hsla) throw new TypeError(`Invalid argument; has no value.`);\r\n    const match = hsla.match(\r\n      /^hsla\\(\\s*((\\d{1,2}|[1-2]\\d{2}|3[0-5]\\d)|360)\\s*,\\s*(\\d{1,2}|100)%\\s*,\\s*(\\d{1,2}|100)%\\s*,\\s*(0(\\.\\d+)?|1(\\.0)?)\\s*\\)$/\r\n    );\r\n    if (!match) throw new TypeError(`Invalid HSLA color format: ${hsla}`);\r\n    const h = parseInt(match[1]) / 360;\r\n    const s = parseInt(match[2]) / 100;\r\n    const l = parseInt(match[3]) / 100;\r\n    let r, g, b;\r\n    if (s === 0) {\r\n      r = g = b = l; // Achromatic\r\n    } else {\r\n      const hue2rgb = (p: number, q: number, t: number) => {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      };\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      const p = 2 * l - q;\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n      r: Math.round(r * 255),\r\n      g: Math.round(g * 255),\r\n      b: Math.round(b * 255),\r\n    };\r\n  }\r\n\r\n  //------------- END -------------\r\n  //------------- TO HSL -------------\r\n  hexToHsl(hex: string): HSL {\r\n    const r = parseInt(hex.substring(1, 3), 16) / 255;\r\n    const g = parseInt(hex.substring(3, 5), 16) / 255;\r\n    const b = parseInt(hex.substring(5, 7), 16) / 255;\r\n    const min = Math.min(r, g, b);\r\n    const max = Math.max(r, g, b);\r\n    const l = (min + max) / 2;\r\n    let s = 0;\r\n    if (min !== max) {\r\n      s = l > 0.5 ? (max - min) / (2 - max - min) : (max - min) / (max + min);\r\n    }\r\n    let h = 0;\r\n    if (min !== max) {\r\n      if (max === r) {\r\n        h = (g - b) / (max - min);\r\n      } else if (max === g) {\r\n        h = 2 + (b - r) / (max - min);\r\n      } else {\r\n        h = 4 + (r - g) / (max - min);\r\n      }\r\n    }\r\n    h *= 60;\r\n    if (h < 0) {\r\n      h += 360;\r\n    }\r\n    return { h, s: s * 100, l: l * 100 };\r\n  }\r\n  //------------- END -------------\r\n  //------------- TO HEX -------------\r\n  rgbToHex(rgbString: string): string {\r\n    const rgbMatch = rgbString.match(\r\n      /^rgb\\(\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*(0*(?:[0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*\\)$/\r\n    );\r\n    if (!rgbMatch) {\r\n      throw new Error('Incorrect RGB color format.');\r\n    }\r\n    const [, r, g, b] = rgbMatch.map(Number);\r\n    return `#${r.toString(16).padStart(2, '0')}${g\r\n      .toString(16)\r\n      .padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\r\n  }\r\n\r\n  nameSVGToHex(name: any) {\r\n    const response = PresetColors[name.toLowerCase()];\r\n    if (response) {\r\n      return PresetColors[name.toLowerCase()];\r\n    }\r\n    throw new Error('Wrong color name');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Guid {\r\n  public static EMPTY = '00000000-0000-0000-0000-000000000000';\r\n\r\n  constructor() {}\r\n\r\n  public static create(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        const r = (Math.random() * 16) | 0,\r\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      }\r\n    );\r\n  }\r\n\r\n  public static isGuid(guid: string): boolean {\r\n    if (!guid) throw new TypeError(`Invalid argument; has no value.`);\r\n    var validator = new RegExp(\r\n      '^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$',\r\n      'i'\r\n    );\r\n    return validator.test(guid);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StylesService {\r\n  constructor() {}\r\n\r\n  getStyleValue(element: Element, property: string): string {\r\n    const computedStyle = window.getComputedStyle(element);\r\n    return computedStyle.getPropertyValue(property);\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}