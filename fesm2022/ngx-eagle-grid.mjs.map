{"version":3,"file":"ngx-eagle-grid.mjs","sources":["../../../ngx-eagle/grid/row/row.directive.ts","../../../ngx-eagle/grid/col/col.directive.ts","../../../ngx-eagle/grid/grid.module.ts","../../../ngx-eagle/grid/ngx-eagle-grid.ts"],"sourcesContent":["import {\r\n  AfterContentInit,\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  Input,\r\n  numberAttribute,\r\n} from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\nexport type NgxJustify =\r\n  | 'start'\r\n  | 'end'\r\n  | 'center'\r\n  | 'space-around'\r\n  | 'space-between'\r\n  | 'space-evenly';\r\nexport type NgxAlign = 'top' | 'middle' | 'bottom';\r\n\r\n@Directive({\r\n  selector: '[ngx-row]',\r\n  host: {\r\n    class: 'ngx-row',\r\n    '[class.ngx-row-top]': `ngxAlign === 'top'`,\r\n    '[class.ngx-row-middle]': `ngxAlign === 'middle'`,\r\n    '[class.ngx-row-bottom]': `ngxAlign === 'bottom'`,\r\n    '[class.ngx-row-start]': `ngxJustify === 'start'`,\r\n    '[class.ngx-row-end]': `ngxJustify === 'end'`,\r\n    '[class.ngx-row-center]': `ngxJustify === 'center'`,\r\n    '[class.ngx-row-space-around]': `ngxJustify === 'space-around'`,\r\n    '[class.ngx-row-space-between]': `ngxJustify === 'space-between'`,\r\n    '[class.ngx-row-space-evenly]': `ngxJustify === 'space-evenly'`,\r\n  },\r\n})\r\nexport class RowDirective implements AfterContentInit {\r\n  @Input() ngxAlign!: NgxAlign;\r\n  @Input() ngxGutter!: string;\r\n  @Input() ngxJustify!: NgxJustify;\r\n  @Input({ transform: numberAttribute }) ngxSpan: number = 24;\r\n\r\n  readonly currentSpan$ = new ReplaySubject<number>(24);\r\n\r\n  readonly currentGutter$ = new ReplaySubject<string>(1);\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.currentSpan$.next(this.ngxSpan);\r\n    this.currentGutter$.next(this.ngxGutter);\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  numberAttribute,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { RowDirective } from '../row/row.directive';\r\n\r\n@Directive({\r\n  selector: '[ngx-col]',\r\n  host: {\r\n    class: 'ngx-col',\r\n  },\r\n})\r\nexport class ColDirective implements OnInit, OnDestroy {\r\n  @Input({ transform: numberAttribute }) ngxSpan: number = 24;\r\n  private subscription: Subscription = new Subscription();\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private renderer2: Renderer2,\r\n    @Optional() @Host() public rowDirective: RowDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.rowDirective?.currentSpan$.subscribe((currentSpan) => {\r\n        this.setMaxWidthCols(currentSpan);\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.rowDirective?.currentGutter$.subscribe((currentGutter) => {\r\n        if (currentGutter) {\r\n          const gutter = JSON.parse(currentGutter)\r\n            .map((val: any) => val + 'px')\r\n            .join(' ');\r\n          this.setGutter(gutter);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  setMaxWidthCols(totalCols: number) {\r\n    if (this.ngxSpan === 0) {\r\n      this.renderer2.setStyle(this.elementRef.nativeElement, 'display', 'none');\r\n    } else {\r\n      const maxWidth = (Number(this.ngxSpan) / totalCols) * 100;\r\n      this.renderer2.setStyle(\r\n        this.elementRef.nativeElement,\r\n        'display',\r\n        'block'\r\n      );\r\n      this.renderer2.setStyle(\r\n        this.elementRef.nativeElement,\r\n        'max-width',\r\n        `${maxWidth}%`\r\n      );\r\n      this.renderer2.setStyle(\r\n        this.elementRef.nativeElement,\r\n        'flex',\r\n        `0 0 ${maxWidth}%`\r\n      );\r\n    }\r\n  }\r\n\r\n  setGutter(gutter: string) {\r\n    this.renderer2.setStyle(\r\n      this.elementRef.nativeElement,\r\n      'margin',\r\n      `${gutter}`\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RowDirective } from './row/row.directive';\r\nimport { ColDirective } from './col/col.directive';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst directives = [RowDirective, ColDirective];\r\n\r\n@NgModule({\r\n  declarations: [directives],\r\n  exports: [directives],\r\n  imports: [CommonModule],\r\n})\r\nexport class GridModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.RowDirective"],"mappings":"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"}