{"version":3,"file":"ngx-eagle-checkbox.mjs","sources":["../../../ngx-eagle/checkbox/checkbox.component.ts","../../../ngx-eagle/checkbox/checkbox.module.ts","../../../ngx-eagle/checkbox/typings.ts","../../../ngx-eagle/checkbox/ngx-eagle-checkbox.ts"],"sourcesContent":["import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild,\r\n  forwardRef,\r\n} from '@angular/core';\r\nimport { Guid } from 'ngx-eagle/core/services';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NgxSize } from './typings';\r\n\r\n@Component({\r\n  selector: 'ngx-checkbox',\r\n  template: `\r\n    <input\r\n      #input_checkbox\r\n      [id]=\"id\"\r\n      type=\"checkbox\"\r\n      [indeterminate]=\"indeterminate\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"eventChecked($event)\"\r\n    />\r\n    <label [for]=\"id\"><ng-content></ng-content></label>\r\n  `,\r\n  host: {\r\n    class: 'ngx-checkbox',\r\n    '[class.ngx-checkbox-sm]': `ngxSize === 'small'`,\r\n    '[class.ngx-checkbox-df]': `ngxSize === 'default'`,\r\n    '[class.ngx-checkbox-lg]': `ngxSize === 'large'`,\r\n  },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => CheckboxComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n})\r\nexport class CheckboxComponent\r\n  implements AfterViewChecked, AfterViewInit, ControlValueAccessor\r\n{\r\n  @Input() checked: boolean = false;\r\n  @Input() indeterminate: boolean = false;\r\n  @Input() ngxColor: string | undefined | null = '#1890FF';\r\n  @Input() ngxSize: NgxSize | number = 'default';\r\n\r\n  @ViewChild('input_checkbox') inputCheckboxRef!: ElementRef;\r\n\r\n  disabled: boolean = false;\r\n\r\n  @Output() onChecked = new EventEmitter<boolean>();\r\n  onChange: any = () => {\r\n    this.onChecked.emit(this.checked);\r\n  };\r\n  onTouched: any = () => {};\r\n\r\n  public id: string = Guid.create();\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.disabled = elementRef.nativeElement.hasAttribute('disabled');\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.setColor();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setColor();\r\n    if (typeof this.ngxSize === 'number') {\r\n      this.setSizeInNumber();\r\n    }\r\n  }\r\n\r\n  setSizeInNumber() {\r\n    const size = Number(this.ngxSize) / 16 + 'rem';\r\n    this.renderer.setStyle(this.inputCheckboxRef.nativeElement, 'width', size);\r\n    this.renderer.setStyle(this.inputCheckboxRef.nativeElement, 'height', size);\r\n  }\r\n\r\n  eventChecked(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    if (!this.disabled) {\r\n      this.checked = target.checked;\r\n      this.writeValue(this.checked);\r\n    }\r\n  }\r\n\r\n  setColor() {\r\n    if (!this.ngxColor) {\r\n      this.ngxColor = '#1890FF';\r\n    }\r\n    if (\r\n      this.inputCheckboxRef &&\r\n      (this.inputCheckboxRef.nativeElement.indeterminate ||\r\n        this.inputCheckboxRef.nativeElement.checked)\r\n    ) {\r\n      this.renderer.setStyle(\r\n        this.inputCheckboxRef.nativeElement,\r\n        'background-color',\r\n        this.disabled ? '#9E9E9E' : this.ngxColor\r\n      );\r\n    } else {\r\n      this.renderer.setStyle(\r\n        this.inputCheckboxRef.nativeElement,\r\n        'background-color',\r\n        'transparent'\r\n      );\r\n    }\r\n  }\r\n\r\n  writeValue(checked: boolean): void {\r\n    this.checked = checked;\r\n    this.onChange(this.checked);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n  exports: [CheckboxComponent],\r\n  imports: [CheckboxComponent],\r\n})\r\nexport class CheckboxModule {}\r\n","const CheckboxSize = ['large', 'small', 'default'] as const;\r\nexport type NgxSize = (typeof CheckboxSize)[number];\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}