{"version":3,"file":"ngx-eagle-select.mjs","sources":["../../../projects/ngx-eagle/select/select.component.ts","../../../projects/ngx-eagle/select/option.component.ts","../../../projects/ngx-eagle/select/select.module.ts","../../../projects/ngx-eagle/select/ngx-eagle-select.ts"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  Optional,\r\n  Self,\r\n  ViewChild,\r\n  booleanAttribute,\r\n} from '@angular/core';\r\nimport { NgxFillMode, NgxRounded, NgxSize } from './typings';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { NgIf } from '@angular/common';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\nconst ngxSizeMap = {\r\n  small: '2.5rem',\r\n  medium: '3rem',\r\n  large: '3.5rem',\r\n};\r\n\r\nconst ngxRoundedOutlinedMap = {\r\n  small: '2px',\r\n  medium: '4px',\r\n  large: '6px',\r\n};\r\n\r\nconst ngxRoundedfilledMap = {\r\n  small: '2px 2px 0px 0px',\r\n  medium: '4px 4px 0px 0px',\r\n  large: '6px 6px 0px 0px',\r\n};\r\n\r\nconst ngxRoundedOptContMap = {\r\n  small: '0px 0px 2px 2px',\r\n  medium: '0px 0px 4px 4px',\r\n  large: '0px 0px 6px 6px',\r\n};\r\n\r\n@Component({\r\n  selector: 'ngx-select',\r\n  template: `\r\n    <div class=\"ngx-field-form-select\" #field_form_select>\r\n      <div\r\n        #select_container\r\n        class=\"ngx-select\"\r\n        [class.ngx-select-filled]=\"ngxFillMode === 'filled'\"\r\n        [class.ngx-select-outlined]=\"ngxFillMode === 'outlined'\"\r\n      >\r\n        <label #select_label class=\"ngx-select-label\">{{ label }}</label>\r\n        <input\r\n          #select_input\r\n          class=\"ngx-select-input\"\r\n          [placeholder]=\"placeholder\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          [readonly]=\"!autocomplete\"\r\n          (input)=\"onInputChange($event)\"\r\n        />\r\n        <span class=\"ngx-select-arrow\">\r\n          <svg\r\n            #select_arrow\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n          >\r\n            <path d=\"M7 10L12 15L17 10H7Z\" fill=\"black\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div\r\n        *ngIf=\"isOpenDropdown && !disabled\"\r\n        #option_container\r\n        class=\"ngx-option-container\"\r\n      >\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n})\r\nexport class SelectComponent\r\n  implements AfterViewInit, ControlValueAccessor, OnChanges\r\n{\r\n  @Input() ngxSize: NgxSize = 'medium';\r\n  @Input() ngxRounded: NgxRounded = 'medium';\r\n  @Input() ngxFillMode: NgxFillMode = 'filled';\r\n  @Input() label: string = '';\r\n  @Input() placeholder: string = '';\r\n  @Input({ transform: booleanAttribute }) autocomplete: boolean = false;\r\n\r\n  @ViewChild('field_form_select') selectRef!: ElementRef;\r\n  @ViewChild('select_container') containerRef!: ElementRef;\r\n  @ViewChild('select_label') labelRef!: ElementRef;\r\n  @ViewChild('select_input') inputRef!: ElementRef;\r\n  @ViewChild('select_arrow') arrowRef!: ElementRef;\r\n  @ViewChild('option_container') optContRef!: ElementRef;\r\n\r\n  readonly containerRef$ = new ReplaySubject<ElementRef>();\r\n  readonly inputRef$ = new ReplaySubject<ElementRef>();\r\n\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n  value: any;\r\n  valStatus: boolean = true;\r\n  disabled: boolean = false;\r\n  inputFocus = false;\r\n\r\n  isOpenDropdown: boolean = false;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Self() public ngControl: NgControl\r\n  ) {\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initialize();\r\n    //Se lanza el evento cuando se esta haciendo focus en el input\r\n    this.inputRef.nativeElement.addEventListener('focus', () => {\r\n      this.inputFocus = true;\r\n      this.moveLabel();\r\n    });\r\n    //Se lanza el evento cuando se desenfoca del input\r\n    this.inputRef.nativeElement.addEventListener('blur', () => {\r\n      this.inputFocus = false;\r\n      if (!this.isOpenDropdown) {\r\n        this.moveLabel();\r\n      }\r\n      this.validate();\r\n    });\r\n  }\r\n\r\n  openDropdown(isOpenDropdown: boolean) {\r\n    setTimeout(() => {\r\n      if (isOpenDropdown) {\r\n        this.isOpenDropdown = this.isOpenDropdown ? false : true;\r\n      } else {\r\n        this.isOpenDropdown = isOpenDropdown;\r\n      }\r\n      if (this.optContRef) {\r\n        this.optContRef.nativeElement.style.borderRadius =\r\n          ngxRoundedOptContMap[this.ngxRounded];\r\n      }\r\n      if (this.ngxFillMode === 'outlined') {\r\n        this.containerRef.nativeElement.style.borderRadius = this.isOpenDropdown\r\n          ? ngxRoundedfilledMap[this.ngxRounded]\r\n          : ngxRoundedOutlinedMap[this.ngxRounded];\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  @HostListener('document:mousedown', ['$event'])\r\n  clickout(event: any): void {\r\n    this.openDropdown(this.selectRef.nativeElement.contains(event.target));\r\n    this.value = this.inputRef.nativeElement.value; // se actualiza el valor dependiendo del valor que fue selecionado en el dropdown\r\n    this.moveLabel();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.initialize();\r\n    this.moveArrow();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  initialize(): void {\r\n    setTimeout(() => {\r\n      this.ngControl.control?.setValue(this.value);\r\n      this.containerRef.nativeElement.style.height = ngxSizeMap[this.ngxSize];\r\n      this.containerRef$.next(this.containerRef);\r\n      this.inputRef$.next(this.inputRef);\r\n      this.containerRef.nativeElement.style.borderRadius =\r\n        this.ngxFillMode === 'outlined'\r\n          ? ngxRoundedOutlinedMap[this.ngxRounded]\r\n          : ngxRoundedfilledMap[this.ngxRounded];\r\n      this.labelRef.nativeElement.style.position = 'absolute';\r\n      this.moveLabel();\r\n      this.moveArrow();\r\n    });\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    this.moveLabel();\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  moveLabel(): void {\r\n    if (this.labelRef) {\r\n      const containerHeight = this.containerRef.nativeElement.offsetHeight;\r\n      if (this.inputFocus || this.value !== '') {\r\n        const top = this.ngxFillMode === 'outlined' ? '-0.375rem ' : '0px';\r\n        this.labelRef.nativeElement.style.top = top;\r\n        this.labelRef.nativeElement.style.fontSize = '0.75rem';\r\n        this.inputRef.nativeElement.placeholder = this.placeholder;\r\n        this.buildBorderOutlined();\r\n      } else {\r\n        const top = `${(containerHeight * 0.333) / 16}rem`;\r\n        this.labelRef.nativeElement.style.top = top;\r\n        this.labelRef.nativeElement.style.fontSize = '1rem';\r\n        this.inputRef.nativeElement.placeholder = '';\r\n        this.drawLineTopBorder();\r\n      }\r\n    }\r\n  }\r\n\r\n  moveArrow(): void {\r\n    if (this.arrowRef) {\r\n      const containerHeight = this.containerRef.nativeElement.offsetHeight;\r\n      const marginTop = `${(containerHeight * 0.282) / 16}rem`;\r\n      this.arrowRef.nativeElement.style.marginTop = marginTop;\r\n    }\r\n  }\r\n\r\n  onInputChange(event: Event): void {\r\n    this.value = (event.target as HTMLInputElement).value;\r\n    this.ngControl.control?.setValue(this.value);\r\n    this.validate();\r\n    this.buildBorderOutlined();\r\n  }\r\n\r\n  buildBorderOutlined(): void {\r\n    if (this.ngxFillMode === 'outlined') {\r\n      const formFieldWidth = this.containerRef.nativeElement.offsetWidth;\r\n      const labelWidth = this.labelRef.nativeElement.offsetWidth;\r\n      const percent = ((labelWidth + 10) / formFieldWidth) * 100;\r\n      let color = this.valStatus // validacion\r\n        ? this.inputFocus // si esta el input con el focus activo coloca el color que le corresponde\r\n          ? 'var(--ngx-comp-form-field-filled-border-color)'\r\n          : 'currentColor'\r\n        : '#F44336';\r\n      const background = `linear-gradient(to right, ${color} 5px, transparent 5px, transparent ${percent}%, ${color} ${percent}%) no-repeat top/100% 1px`;\r\n      const borderColor = `transparent ${color} ${color}`;\r\n      this.containerRef.nativeElement.style.borderColor = borderColor;\r\n      this.containerRef.nativeElement.style.background = background;\r\n    }\r\n  }\r\n\r\n  drawLineTopBorder(): void {\r\n    const background =\r\n      this.ngxFillMode === 'outlined'\r\n        ? 'linear-gradient(to right, transparent 0%, currentColor 0%) no-repeat top/100% 1px'\r\n        : 'none';\r\n    const borderColor = `transparent currentColor currentColor`;\r\n    this.containerRef.nativeElement.style.borderColor = borderColor;\r\n    this.containerRef.nativeElement.style.background = background;\r\n  }\r\n\r\n  validate() {\r\n    this.valStatus =\r\n      this.ngControl.status?.toLowerCase() === 'valid' ? true : false;\r\n    this.containerRef.nativeElement.style.color = this.valStatus\r\n      ? 'currentColor'\r\n      : '#F44336';\r\n\r\n    this.inputRef.nativeElement.style.color = this.valStatus\r\n      ? 'var(--ngx-comp-form-field-filled-border-color)'\r\n      : '#F44336';\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { SelectComponent } from './select.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-option',\r\n  template: `\r\n    <div (click)=\"onClick()\" #option_item class=\"ngx-option\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n})\r\nexport class OptionComponent implements OnInit, OnDestroy {\r\n  @ViewChild('option_item') optionItemRef!: ElementRef;\r\n  @Input() value: string = '';\r\n\r\n  inputRef!: ElementRef;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(@Optional() @Host() public selectComponent: SelectComponent) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.selectComponent?.containerRef$.subscribe((containerRef) => {\r\n        const containerWidth = containerRef.nativeElement.offsetWidth;\r\n        const containerHeight = containerRef.nativeElement.offsetHeight - 8;\r\n        this.optionItemRef.nativeElement.style.width = `${\r\n          containerWidth / 16\r\n        }rem`;\r\n        this.optionItemRef.nativeElement.style.height = `${\r\n          containerHeight / 16\r\n        }rem`;\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.selectComponent?.inputRef$.subscribe((inputRef) => {\r\n        this.inputRef = inputRef;\r\n      })\r\n    );\r\n  }\r\n\r\n  onClick() {\r\n    this.inputRef.nativeElement.value =\r\n      this.optionItemRef.nativeElement.textContent;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SelectComponent } from './select.component';\r\nimport { OptionComponent } from './option.component';\r\n\r\n@NgModule({\r\n  imports: [SelectComponent, OptionComponent],\r\n  exports: [SelectComponent, OptionComponent],\r\n})\r\nexport class SelectModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.SelectComponent"],"mappings":"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"}