{"version":3,"file":"ngx-eagle-button.mjs","sources":["../../../ngx-eagle/button/button.directive.ts","../../../ngx-eagle/button/button.module.ts","../../../ngx-eagle/button/ngx-eagle-button.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { NgxFillMode, NgxRounded, NgxSize } from './typings';\r\nimport { ColorConverter } from 'ngx-eagle/core/services';\r\nimport { ColorContrast } from 'ngx-eagle/core/types';\r\n\r\n@Directive({\r\n  selector: 'button[ngx-button]',\r\n  host: {\r\n    class: 'ngx-button',\r\n    '[class.ngx-button-sm]': `ngxSize === 'small'`,\r\n    '[class.ngx-button-md]': `ngxSize === 'medium'`,\r\n    '[class.ngx-button-lg]': `ngxSize === 'large'`,\r\n    '[class.ngx-rounded-sm]': `ngxRounded === 'small'`,\r\n    '[class.ngx-rounded-md]': `ngxRounded === 'medium'`,\r\n    '[class.ngx-rounded-lg]': `ngxRounded === 'large'`,\r\n    '[class.ngx-rounded-full]': `ngxRounded === 'full'`,\r\n    '[class.ngx-button-filled]': `ngxFillMode === 'filled'`,\r\n    '[class.ngx-button-outlined]': `ngxFillMode === 'outlined'`,\r\n    '[class.ngx-button-text]': `ngxFillMode === 'text'`,\r\n    '[class.ngx-button-elevated]': `ngxFillMode === 'elevated'`,\r\n  },\r\n  standalone: true,\r\n})\r\nexport class ButtonDirective implements OnInit, OnChanges {\r\n  @Input() ngxColor!: ColorContrast | string;\r\n  @Input() ngxFillMode: NgxFillMode = 'filled';\r\n  @Input() ngxRounded: NgxRounded = 'medium';\r\n  @Input() ngxSize: NgxSize = 'medium';\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private colorConverter: ColorConverter\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('ngxFillMode')) {\r\n      this.setColorByMode(this.ngxColor ? this.ngxColor : '#1890FF');\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxColor')) {\r\n      this.setColorByMode(this.ngxColor);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.ngxColor) {\r\n      this.setColorByMode('#1890FF');\r\n    }\r\n  }\r\n\r\n  setColorByMode(color: ColorContrast | string) {\r\n    var colorContrast!: ColorContrast;\r\n    if (typeof color === 'string') {\r\n      colorContrast =\r\n        color !== '#1890FF'\r\n          ? this.colorConverter.contrastingColors(color)\r\n          : { backgroundColor: '#1890FF', overlayColor: '#ffffff' };\r\n    }\r\n\r\n    if (typeof color === 'object') {\r\n      colorContrast = color;\r\n    }\r\n\r\n    switch (this.ngxFillMode) {\r\n      case 'filled':\r\n        this.setColor(\r\n          colorContrast.backgroundColor,\r\n          colorContrast.overlayColor,\r\n          'transparent'\r\n        );\r\n        break;\r\n      case 'outlined':\r\n        this.setColor(\r\n          'transparent',\r\n          colorContrast.backgroundColor,\r\n          colorContrast.backgroundColor\r\n        );\r\n        break;\r\n      case 'elevated':\r\n        this.setColor(\r\n          colorContrast.backgroundColor,\r\n          colorContrast.overlayColor,\r\n          'transparent'\r\n        );\r\n        break;\r\n      case 'text':\r\n        this.setColor(\r\n          'transparent',\r\n          colorContrast.backgroundColor,\r\n          'transparent'\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  setColor(backgroundColor: string, color: string, borderColor: string) {\r\n    this.renderer.setStyle(\r\n      this.elementRef.nativeElement,\r\n      'background-color',\r\n      backgroundColor\r\n    );\r\n    this.renderer.setStyle(this.elementRef.nativeElement, 'color', color);\r\n    this.renderer.setStyle(\r\n      this.elementRef.nativeElement,\r\n      'border-color',\r\n      borderColor\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ButtonDirective } from './button.directive';\r\n\r\n@NgModule({\r\n  exports: [ButtonDirective],\r\n  imports: [ButtonDirective],\r\n})\r\nexport class ButtonModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}