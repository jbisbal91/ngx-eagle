{"version":3,"file":"ngx-eagle-table.mjs","sources":["../../../projects/ngx-eagle/table/table/table.directive.ts","../../../projects/ngx-eagle/table/table/column-group.directive.ts","../../../projects/ngx-eagle/table/table.module.ts","../../../projects/ngx-eagle/table/ngx-eagle-table.ts"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\ninterface ScrollOptions {\r\n  x?: string;\r\n  y?: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'table[ngx-table]',\r\n  host: {\r\n    class: 'ngx-table',\r\n    '[class.ngx-table-bordered]': 'ngxBordered',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class TableDirective implements AfterViewInit {\r\n  @Input() ngxScroll: ScrollOptions | null = null;\r\n  @Input() ngxBordered = false;\r\n\r\n  constructor(public elementRef: ElementRef, private renderer2: Renderer2) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.addScroll();\r\n  }\r\n\r\n  private addScroll(): void {\r\n    if (this.ngxScroll) {\r\n      const { x, y } = this.ngxScroll;\r\n      const newDiv = this.renderer2.createElement('div');\r\n      this.renderer2.addClass(newDiv, 'table-container');\r\n      if (x || y) {\r\n        this.renderer2.setStyle(newDiv, 'overflow', 'scroll');\r\n        if (x) {\r\n          this.renderer2.setStyle(newDiv, 'max-width', x);\r\n        }\r\n        if (y) {\r\n          this.renderer2.setStyle(newDiv, 'max-height', y);\r\n        }\r\n        this.renderer2.insertBefore(\r\n          this.renderer2.parentNode(this.elementRef.nativeElement),\r\n          newDiv,\r\n          this.elementRef.nativeElement\r\n        );\r\n        this.renderer2.appendChild(newDiv, this.elementRef.nativeElement);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'tr[ngx-column-group]',\r\n  host: {\r\n    class: 'ngx-column-group',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class ColumnGroupDirective {\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableDirective } from './table/table.directive';\r\nimport { ColumnGroupDirective } from './table/column-group.directive';\r\n\r\n@NgModule({\r\n  exports: [TableDirective,ColumnGroupDirective],\r\n  imports: [TableDirective,ColumnGroupDirective],\r\n})\r\nexport class TableModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAqBa,cAAc,CAAA;IAIzB,WAAmB,CAAA,UAAsB,EAAU,SAAoB,EAAA;QAApD,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAAU,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;QAH9D,IAAS,CAAA,SAAA,GAAyB,IAAI,CAAC;QACvC,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;KAE8C;IAE3E,eAAe,GAAA;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,SAAS,GAAA;QACf,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AACtD,gBAAA,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AACjD,iBAAA;AACD,gBAAA,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AAClD,iBAAA;gBACD,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EACxD,MAAM,EACN,IAAI,CAAC,UAAU,CAAC,aAAa,CAC9B,CAAC;AACF,gBAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACnE,aAAA;AACF,SAAA;KACF;+GA/BU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAd,cAAc,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,0BAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAR1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,IAAI,EAAE;AACJ,wBAAA,KAAK,EAAE,WAAW;AAClB,wBAAA,4BAA4B,EAAE,aAAa;AAC5C,qBAAA;AACD,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA,CAAA;yHAEU,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;MCdK,oBAAoB,CAAA;AAC/B,IAAA,WAAA,GAAA,GAAgB;+GADL,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAApB,oBAAoB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAPhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,IAAI,EAAE;AACJ,wBAAA,KAAK,EAAE,kBAAkB;AAC1B,qBAAA;AACD,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA,CAAA;;;MCAY,WAAW,CAAA;+GAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,YAFZ,cAAc,EAAC,oBAAoB,CADnC,EAAA,OAAA,EAAA,CAAA,cAAc,EAAC,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA;gHAGlC,WAAW,EAAA,CAAA,CAAA,EAAA;;4FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAJvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,cAAc,EAAC,oBAAoB,CAAC;AAC9C,oBAAA,OAAO,EAAE,CAAC,cAAc,EAAC,oBAAoB,CAAC;AAC/C,iBAAA,CAAA;;;ACPD;;AAEG;;;;"}