{"version":3,"file":"ngx-eagle-avatar.mjs","sources":["../../../ngx-eagle/avatar/avatar.component.ts","../../../ngx-eagle/avatar/avatar-group.component.ts","../../../ngx-eagle/avatar/avatar.module.ts","../../../ngx-eagle/avatar/ngx-eagle-avatar.ts"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgxShape, NgxSize } from './typings';\r\nimport { NgIf } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ngx-avatar',\r\n  template: ` <div class=\"ngx-avatar-img\">\r\n      <img *ngIf=\"ngxSrc\" [src]=\"ngxSrc\" alt=\"ngx-avatar\" />\r\n    </div>\r\n    <span *ngIf=\"ngxText && !ngxSrc\">{{ getInitials(ngxText) }}</span>\r\n\r\n    <span #ngx_avatar_user *ngIf=\"!ngxSrc && !ngxText\" class=\"ngx-avatar-user\"\r\n      ><svg\r\n        viewBox=\"64 64 896 896\"\r\n        focusable=\"false\"\r\n        fill=\"currentColor\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        data-icon=\"user\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <path\r\n          d=\"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\"\r\n        ></path>\r\n      </svg>\r\n    </span>`,\r\n  host: {\r\n    class: 'ngx-avatar',\r\n    '[class.ngx-avatar-circle]': `ngxShape === 'circle'`,\r\n    '[class.ngx-avatar-square]': `ngxShape === 'square'`,\r\n    '[class.ngx-avatar-sm]': `ngxSize === 'small'`,\r\n    '[class.ngx-avatar-df]': `ngxSize === 'default'`,\r\n    '[class.ngx-avatar-lg]': `ngxSize === 'large'`,\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n})\r\nexport class AvatarComponent implements AfterViewInit {\r\n  @Input() ngxShape: NgxShape = 'circle';\r\n  @Input() ngxSize: NgxSize | number = 'default';\r\n  @Input() ngxSrc: string | null = null;\r\n  @Input() ngxText: string | null = null;\r\n\r\n  @ViewChild('ngx_avatar_user') avatarUserRef!: ElementRef;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private renderer2: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (typeof this.ngxSize === 'number') {\r\n      this.setSizeInNumber();\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  setSizeInNumber() {\r\n    const size = Number(this.ngxSize) / 16 + 'rem';\r\n    this.renderer2.setStyle(this.elementRef.nativeElement, 'width', size);\r\n    this.renderer2.setStyle(this.elementRef.nativeElement, 'height', size);\r\n    this.renderer2.setStyle(this.elementRef.nativeElement, 'line-height', size);\r\n    this.setFontSizeImgUser();\r\n  }\r\n\r\n  setFontSizeImgUser() {\r\n    if (this.avatarUserRef) {\r\n      const fontSize = `${(Number(this.ngxSize) * 0.5) / 16}rem`;\r\n      this.renderer2.setStyle(\r\n        this.avatarUserRef.nativeElement,\r\n        'font-size',\r\n        fontSize\r\n      );\r\n    }\r\n  }\r\n\r\n  getInitials(text: string): string {\r\n    const words: string[] = text.split(' ');\r\n    const initials: string[] = words.map((word) =>\r\n      word.charAt(0).toUpperCase()\r\n    );\r\n    this.renderer2.setStyle(\r\n      this.elementRef.nativeElement,\r\n      'background-color',\r\n      this.getBackgroundColor(initials.join(''))\r\n    );\r\n    return initials.join('');\r\n  }\r\n\r\n  getBackgroundColor(initials: string): string {\r\n    const colors = {\r\n      A: '#FF5733', // Rojo\r\n      B: '#33FF57', // Verde\r\n      C: '#3357FF', // Azul\r\n      D: '#FF33E8', // Rosa\r\n      E: '#FFD733', // Amarillo\r\n      F: '#FF6347', // Tomate\r\n      G: '#32CD32', // Verde lima\r\n      H: '#8A2BE2', // Azul añil\r\n      I: '#FF1493', // Rosa fuerte\r\n      J: '#FF4500', // Naranja rojizo\r\n      K: '#FF8C00', // Naranja oscuro\r\n      L: '#00BFFF', // Azul celeste\r\n      M: '#9400D3', // Violeta oscuro\r\n      N: '#008080', // Verde azulado\r\n      O: '#800000', // Marrón\r\n      P: '#00FF7F', // Verde primavera\r\n      Q: '#FFD700', // Oro\r\n      R: '#800080', // Púrpura\r\n      S: '#008000', // Verde\r\n      T: '#FFA500', // Naranja\r\n      U: '#4B0082', // Índigo\r\n      V: '#FFC0CB', // Rosa claro\r\n      W: '#1E90FF', // Azul real\r\n      X: '#FF00FF', // Fucsia\r\n      Y: '#FFFF00', // Amarillo brillante\r\n      Z: '#808080', // Gris para las letras no asignadas\r\n    };\r\n\r\n    const initialLetter = initials.charAt(0).toUpperCase();\r\n    const color =\r\n      (colors as { [key: string]: string })[initialLetter] || '#CCCCCC';\r\n    return color;\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { AvatarComponent } from './avatar.component';\r\n\r\n@Component({\r\n  selector: 'ngx-avatar-group',\r\n  template: `<ng-content></ng-content>`,\r\n  host: {\r\n    class: 'ngx-avatar-group',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class AvatarGroupComponent implements AfterContentInit {\r\n  @Input() maxVisibleAvatars: number | null = null;\r\n\r\n  @ContentChildren(AvatarComponent)\r\n  public avatars!: QueryList<AvatarComponent>;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.updateVisibleAvatars();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateVisibleAvatars(): void {\r\n    const avatarArray = this.avatars.toArray();\r\n    avatarArray.forEach((avatar, index) => {\r\n      if (this.maxVisibleAvatars && index >= this.maxVisibleAvatars) {\r\n        this.renderer.removeChild(\r\n          this.elementRef.nativeElement,\r\n          avatar.elementRef.nativeElement\r\n        );\r\n      }\r\n    });\r\n\r\n    if (\r\n      this.maxVisibleAvatars &&\r\n      this.avatars.length - this.maxVisibleAvatars > 0\r\n    ) {\r\n      this.createNodeOverflow(this.avatars.length - this.maxVisibleAvatars);\r\n    }\r\n  }\r\n\r\n  createNodeOverflow(overflow: number) {\r\n    const ngxSize = this.avatars.first.ngxSize;\r\n    const nodeOverflow = document.createElement('div');\r\n    nodeOverflow.classList.add('ngx-avatar');\r\n    nodeOverflow.classList.add('ngx-avatar-circle');\r\n    nodeOverflow.innerText = `+${overflow}`;\r\n    this.setSizeNodeOverflow(nodeOverflow, ngxSize);\r\n    this.elementRef.nativeElement.appendChild(nodeOverflow);\r\n  }\r\n\r\n  setSizeNodeOverflow(nodeOverflow: any, ngxSize: any) {\r\n    if (typeof ngxSize === 'string') {\r\n      switch (ngxSize) {\r\n        case 'small':\r\n          nodeOverflow.classList.add('ngx-avatar-sm');\r\n          break;\r\n        case 'default':\r\n          nodeOverflow.classList.add('ngx-avatar-df');\r\n          break;\r\n        case 'large':\r\n          nodeOverflow.classList.add('ngx-avatar-lg');\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (typeof ngxSize === 'number') {\r\n      const size = Number(ngxSize) / 16 + 'rem';\r\n      this.renderer.setStyle(nodeOverflow, 'width', size);\r\n      this.renderer.setStyle(nodeOverflow, 'height', size);\r\n      this.renderer.setStyle(nodeOverflow, 'line-height', size);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AvatarComponent } from './avatar.component';\r\nimport { AvatarGroupComponent } from './avatar-group.component';\r\n\r\n@NgModule({\r\n  exports: [AvatarGroupComponent, AvatarComponent],\r\n  imports: [AvatarGroupComponent, AvatarComponent],\r\n})\r\nexport class AvatarModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}