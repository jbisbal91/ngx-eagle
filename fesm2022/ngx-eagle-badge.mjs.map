{"version":3,"file":"ngx-eagle-badge.mjs","sources":["../../../ngx-eagle/badge/typings.ts","../../../ngx-eagle/badge/badge.directive.ts","../../../ngx-eagle/badge/badge.module.ts","../../../ngx-eagle/badge/ngx-eagle-badge.ts"],"sourcesContent":["const BadgeSize = ['small', 'medium', 'large'] as const;\r\nexport type NgxSize = (typeof BadgeSize)[number];\r\n\r\nconst BadgePosition = ['before', 'after'] as const;\r\nexport type NgxPosition = (typeof BadgePosition)[number];\r\n\r\nexport type NodeName = { [key: string]: string };\r\nexport const nodeNameForText: NodeName = {\r\n  P: 'p',\r\n  SPAN: 'span',\r\n  H1: 'h1',\r\n  H2: 'h2',\r\n  H3: 'h3',\r\n  H4: 'h4',\r\n  H5: 'h5',\r\n  H6: 'h6',\r\n  A: 'a',\r\n  STRONG: 'strong',\r\n  EM: 'em',\r\n  B: 'b',\r\n  I: 'i',\r\n  U: 'u',\r\n  S: 's',\r\n  SUP: 'sup',\r\n  SUB: 'sub',\r\n  BLOCKQUOTE: 'blockquote',\r\n  Q: 'q',\r\n  CITE: 'cite',\r\n  CODE: 'code',\r\n  PRE: 'pre',\r\n  ABBR: 'abbr',\r\n  TIME: 'time',\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  booleanAttribute,\r\n  numberAttribute,\r\n} from '@angular/core';\r\nimport { ColorContrast } from 'ngx-eagle/core/types';\r\nimport { NgxPosition, NgxSize, nodeNameForText } from './typings';\r\nimport { ColorConverter } from 'ngx-eagle/core/services';\r\n\r\n@Directive({\r\n  selector: '[ngxBadge]',\r\n  host: {\r\n    class: 'ngx-badge',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class BadgeDirective implements AfterViewInit, OnChanges {\r\n  @Input({ transform: numberAttribute }) ngxBadge!: number;\r\n  @Input() ngxBadgeColor!: ColorContrast | string;\r\n  @Input({ transform: booleanAttribute }) ngxBadgeHidden: boolean = false;\r\n  @Input() ngxBadgePosition: NgxPosition = 'after';\r\n  @Input() ngxBadgeSize: NgxSize = 'small';\r\n  @Input({ transform: numberAttribute }) ngxOverflowCount: number = 99;\r\n\r\n  newSpan = document.createElement('span');\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private renderer2: Renderer2,\r\n    private colorConverter: ColorConverter\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['ngxBadgeHidden']?.currentValue) {\r\n      this.renderer2.addClass(this.newSpan, 'ngx-badge-hidden');\r\n    } else {\r\n      this.renderer2.removeClass(this.newSpan, 'ngx-badge-hidden');\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxBadgeColor')) {\r\n      this.setColor(this.ngxBadgeColor);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxBadgeSize')) {\r\n      this.setSize();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxBadge')) {\r\n      this.setTextContent();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxOverflowCount')) {\r\n      this.setTextContent();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('ngxBadgePosition')) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.buildBadge();\r\n    if (!this.ngxBadgeColor) {\r\n      this.setColor('#FF4D4F');\r\n    }\r\n    this.setTextContent();\r\n    this.setPosition();\r\n    this.setSize();\r\n  }\r\n\r\n  buildBadge() {\r\n    this.renderer2.addClass(this.newSpan, 'ngx-badge-content');\r\n    this.renderer2.appendChild(this.elementRef.nativeElement, this.newSpan);\r\n    this.setMaxWidth();\r\n  }\r\n\r\n  setPosition() {\r\n    if (this.ngxBadgePosition === 'before') {\r\n      this.renderer2.addClass(this.newSpan, 'ngx-badge-before');\r\n    } else {\r\n      this.renderer2.removeClass(this.newSpan, 'ngx-badge-before');\r\n    }\r\n  }\r\n\r\n  setMaxWidth() {\r\n    const nodeName = this.elementRef.nativeElement.nodeName;\r\n    if (nodeNameForText[nodeName]) {\r\n      this.renderer2.setStyle(\r\n        this.elementRef.nativeElement,\r\n        'width',\r\n        'fit-content'\r\n      );\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    this.renderer2.addClass(this.newSpan, `ngx-badge-${this.ngxBadgeSize}`);\r\n  }\r\n\r\n  setTextContent() {\r\n    this.newSpan.textContent =\r\n      this.ngxBadge > this.ngxOverflowCount\r\n        ? `${this.ngxOverflowCount}+`\r\n        : `${this.ngxBadge}`;\r\n  }\r\n\r\n  setColor(color: ColorContrast | string) {\r\n    var colorContrast!: ColorContrast;\r\n    if (typeof color === 'string') {\r\n      colorContrast =\r\n        color !== '#FF4D4F'\r\n          ? this.colorConverter.contrastingColors(color)\r\n          : { backgroundColor: '#FF4D4F', overlayColor: '#ffffff' };\r\n    }\r\n\r\n    if (typeof color === 'object') {\r\n      colorContrast = color;\r\n    }\r\n\r\n    this.renderer2.setStyle(\r\n      this.newSpan,\r\n      'background-color',\r\n      colorContrast.backgroundColor\r\n    );\r\n    this.renderer2.setStyle(this.newSpan, 'color', colorContrast.overlayColor);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BadgeDirective } from './badge.directive';\r\n\r\n@NgModule({\r\n  imports: [BadgeDirective],\r\n  exports: [BadgeDirective],\r\n})\r\nexport class BadgeModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}