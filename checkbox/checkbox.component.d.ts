import { AfterViewChecked, AfterViewInit, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NgxSize } from './typings';
import * as i0 from "@angular/core";
export declare class CheckboxComponent implements AfterViewChecked, AfterViewInit, ControlValueAccessor {
    private elementRef;
    private renderer;
    checked: boolean;
    indeterminate: boolean;
    ngxColor: string | undefined | null;
    ngxSize: NgxSize | number;
    inputCheckboxRef: ElementRef;
    disabled: boolean;
    onChecked: EventEmitter<boolean>;
    onChange: any;
    onTouched: any;
    id: string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngAfterViewChecked(): void;
    ngAfterViewInit(): void;
    setSizeInNumber(): void;
    eventChecked(event: Event): void;
    setColor(): void;
    writeValue(checked: boolean): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(disabled: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckboxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CheckboxComponent, "ngx-checkbox", never, { "checked": { "alias": "checked"; "required": false; }; "indeterminate": { "alias": "indeterminate"; "required": false; }; "ngxColor": { "alias": "ngxColor"; "required": false; }; "ngxSize": { "alias": "ngxSize"; "required": false; }; }, { "onChecked": "onChecked"; }, never, ["*"], true, never>;
}
